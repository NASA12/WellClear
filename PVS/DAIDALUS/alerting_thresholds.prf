(alerting_thresholds
 (alert_from_alertor_list_TCC1 0
  (alert_from_alertor_list_TCC1-1 nil 3658589593
   ("" (subtype-tcc) nil nil)
   ((posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (alert_from_alertor_list_TCC2 0
  (alert_from_alertor_list_TCC2-1 nil 3658589593
   ("" (subtype-tcc) nil nil) nil nil))
 (alert_from_alertor_list_TCC3 0
  (alert_from_alertor_list_TCC3-1 nil 3658589593
   ("" (subtype-tcc) nil nil) nil nil))
 (alert_from_alertor_list_TCC4 0
  (alert_from_alertor_list_TCC4-1 nil 3658589593
   ("" (termination-tcc) nil nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil))
   nil))
 (alert_from_alertor_list_TCC5 0
  (alert_from_alertor_list_TCC5-1 nil 3658589593
   ("" (skeep :preds? t)
    (("" (skeep)
      (("" (skeep)
        (("" (typepred "v(alert_rest)(aco)(aci) ")
          (("" (assert)
            (("" (expand "length" 3 1) (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((below type-eq-decl nil naturalnumbers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (length def-decl "nat" list_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (list type-decl nil list_adt nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (string type-eq-decl nil strings nil)
    (< const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil))
   nil))
 (alert_from_alertor_list_TCC6 0
  (alert_from_alertor_list_TCC6-1 nil 3658589593
   ("" (subtype-tcc) nil nil) nil nil))
 (thresholds_alerting_TCC1 0
  (bla_blah "dumb_proof" 3658590872
   ("" (skeep :preds? t)
    (("" (lemma "every_nth[number]")
      (("" (inst?)
        (("" (flatten)
          (("" (hide -1)
            (("" (ground)
              (("" (hide 2)
                (("" (skeep :preds? t)
                  ((""
                    (lemma
                     "map_nth_rw[Aircraft, below(1 + length(AlertorList(atl)))]")
                    (("" (inst?)
                      (("" (inst - "i")
                        (("1" (ground)
                          (("1" (postpone) nil nil)
                           ("2" (postpone) nil nil)
                           ("3" (postpone) nil nil)
                           ("4" (postpone) nil nil)
                           ("5" (postpone) nil nil)
                           ("6" (postpone) nil nil))
                          nil)
                         ("2" (postpone) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (thresholds_alerting_TCC1-1 nil 3658589593
   ("" (skeep :preds? t)
    (("" (lemma "every_nth[number]")
      (("" (inst?)
        (("" (flatten)
          (("" (hide -1)
            (("" (ground)
              (("" (hide 2)
                (("" (skeep :preds? t)
                  ((""
                    (lemma
                     "map_nth_rw[Aircraft, below(1 + length(AlertorList(atl)))]")
                    (("" (postpone) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil))
 (thresholds_alerting_default_TCC1 0
  (thresholds_alerting_default_TCC1-1 nil 3658589593
   ("" (subtype-tcc) nil nil) nil nil)))

