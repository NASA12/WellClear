(kinematic_trk_bands (round_TCC1 0
                      (round_TCC1-1 nil 3631615162
                       ("" (subtype-tcc) nil nil)
                       ((boolean nonempty-type-decl nil booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (number nonempty-type-decl nil numbers nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_le_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_minus_real_is_real application-judgement
                         "real" reals nil)
                        (real_plus_real_is_real application-judgement
                         "real" reals nil))
                       nil))
                     (kinematic_trk_bands_init_TCC1 0
                      (kinematic_trk_bands_init_TCC1-1 nil 3631963199
                       ("" (skeep)
                        (("" (skeep)
                          (("" (skeep)
                            (("" (replaces -2)
                              ((""
                                (assert)
                                ((""
                                  (expand "turnOmega" +)
                                  ((""
                                    (split)
                                    (("1" (decompose-equality) nil nil)
                                     ("2"
                                      (lemma "trkgs2vect_id")
                                      (("2"
                                        (inst - "vect2(vo)")
                                        (("1"
                                          (expand "ground_speed")
                                          (("1"
                                            (expand "trkgs2vect")
                                            (("1"
                                              (expand "trk")
                                              (("1"
                                                (typepred "vo")
                                                (("1"
                                                  (lemma
                                                   "vectors_2D.sqv_eq_0")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (split +)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (decompose-equality
                                                               2)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "*"
                                                                 -2)
                                                                (("2"
                                                                  (decompose-equality
                                                                   -2)
                                                                  (("2"
                                                                    (decompose-equality
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "vect2")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "vect2")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "vo")
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_bands_init_TCC2 0
                      (kinematic_trk_bands_init_TCC2-2 nil 3632474412
                       ("" (skeep)
                        (("" (skeep)
                          (("" (skeep)
                            (("" (replaces -2)
                              ((""
                                (assert)
                                ((""
                                  (expand "turnOmega" +)
                                  ((""
                                    (split)
                                    (("1" (decompose-equality) nil nil)
                                     ("2"
                                      (lemma "trkgs2vect_id")
                                      (("2"
                                        (inst - "vect2(vo)")
                                        (("1"
                                          (expand "ground_speed")
                                          (("1"
                                            (expand "trkgs2vect")
                                            (("1"
                                              (expand "trk")
                                              (("1"
                                                (typepred "vo")
                                                (("1"
                                                  (lemma
                                                   "vectors_2D.sqv_eq_0")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (split +)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (decompose-equality
                                                               2)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "*"
                                                                 -2)
                                                                (("2"
                                                                  (decompose-equality
                                                                   -2)
                                                                  (("2"
                                                                    (decompose-equality
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "vect2")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "vect2")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "vo")
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil)
                      (kinematic_trk_bands_init_TCC2-1 nil 3631963199
                       ("" (subtype-tcc) nil nil)
                       ((turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (ground_speed const-decl "nnreal" track_3D
                                      "kinematics/")
                        (norm const-decl "nnreal" vectors_2D
                              "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (* const-decl "real" vectors_2D "vectors/")
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/"))
                       nil))
                     (kinematic_trk_bands_init_TCC3 0
                      (kinematic_trk_bands_init_TCC3-2 nil 3631963791
                       ("" (skeep)
                        (("" (skeep)
                          (("" (skeep)
                            (("" (skeep)
                              ((""
                                (hide -4)
                                ((""
                                  (replaces -3)
                                  ((""
                                    (assert)
                                    ((""
                                      (expand "turnOmega" +)
                                      ((""
                                        (split)
                                        (("1"
                                          (decompose-equality)
                                          nil
                                          nil)
                                         ("2"
                                          (lemma "trkgs2vect_id")
                                          (("2"
                                            (inst - "vect2(vo)")
                                            (("1"
                                              (expand "ground_speed")
                                              (("1"
                                                (expand "trkgs2vect")
                                                (("1"
                                                  (expand "trk")
                                                  (("1"
                                                    (typepred "vo")
                                                    (("1"
                                                      (lemma
                                                       "vectors_2D.sqv_eq_0")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (split +)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (decompose-equality
                                                                   2)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "*"
                                                                     -2)
                                                                    (("2"
                                                                      (decompose-equality
                                                                       -2)
                                                                      (("2"
                                                                        (decompose-equality
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "vect2")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "vect2")
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (typepred "vo")
                                              (("2"
                                                (lemma
                                                 "vectors_2D.sqv_eq_0")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil)
                      (kinematic_trk_bands_init_TCC3-1 nil 3631963199
                       ("" (subtype-tcc) nil nil) nil nil))
                     (kinematic_trk_bands_init_TCC4 0
                      (kinematic_trk_bands_init_TCC4-2 nil 3632474441
                       ("" (skeep*)
                        (("" (typepred "vo")
                          (("" (replaces -9) (("" (assert) nil nil))
                            nil))
                          nil))
                        nil)
                       ((vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (nnreal type-eq-decl nil real_types nil)
                        (>= const-decl "bool" reals nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (> const-decl "bool" reals nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number nonempty-type-decl nil numbers nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil)
                      (kinematic_trk_bands_init_TCC4-1 nil 3631963199
                       ("" (skeep*) (("" (assert) nil nil)) nil) nil
                       nil))
                     (kinematic_trk_bands_init_b2m_TCC1 0
                      (kinematic_trk_bands_init_b2m_TCC1-1 nil
                       3632218193 ("" (subtype-tcc) nil nil)
                       ((posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (> const-decl "bool" reals nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (>= const-decl "bool" reals nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number nonempty-type-decl nil numbers nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (Integral const-decl "real" integral_def
                         "analysis/")
                        (atan_value const-decl "real" atan "trig_fnd/")
                        (pi const-decl "posreal" atan "trig_fnd/")
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (* const-decl "real" vectors_2D "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (norm const-decl "nnreal" vectors_2D
                              "vectors/")
                        (ground_speed const-decl "nnreal" track_3D
                                      "kinematics/")
                        (cos const-decl "real" sincos_def "trig_fnd/")
                        (sin const-decl "real" sincos_def "trig_fnd/")
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (* const-decl "Vector" vectors_3D "vectors/")
                        (+ const-decl "Vector" vectors_3D "vectors/")
                        (detector? const-decl "bool" int_bands nil)
                        (real_times_real_is_real application-judgement
                         "real" reals nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_times_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil)
                        (real_minus_real_is_real application-judgement
                         "real" reals nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_bands_init_b2m 0
                      (kinematic_trk_bands_init_b2m-4 nil 3636301526
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (expand "kinematic_trk_bands_init" :assert?
                                    none)
                            ((""
                              (name "Lfun"
                                    "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                              ((""
                                (replaces -1)
                                ((""
                                  (name
                                   "Rfun"
                                   "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                  ((""
                                    (replaces -1)
                                    ((""
                                      (name
                                       "MaxN"
                                       "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                         ELSE ceiling(pi / step)
                                                                                                         ENDIF)")
                                      ((""
                                        (case "NOT MaxN>=1")
                                        (("1"
                                          (hide -2)
                                          (("1"
                                            (replaces -1 1 :dir rl)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (case "NOT pi/step>=1")
                                                (("1"
                                                  (cross-mult 1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (ground)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replaces -2)
                                          (("2"
                                            (name
                                             "anglestep"
                                             "pi/MaxN")
                                            (("1"
                                              (case
                                               "NOT (anglestep > 0 AND pi/anglestep = MaxN)")
                                              (("1"
                                                (expand "anglestep" 1)
                                                (("1"
                                                  (hide -3)
                                                  (("1"
                                                    (cross-mult 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (name
                                                   "timestep"
                                                   "anglestep/omega")
                                                  (("2"
                                                    (case
                                                     "NOT timestep>0")
                                                    (("1"
                                                      (expand
                                                       "timestep"
                                                       1)
                                                      (("1"
                                                        (cross-mult 1)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (name
                                                       "TrackInt"
                                                       "kinematic_bands_combine(LOS,
                                     CD,
                                     LOS2,
                                     CD2,
                                     UseLOS2,
                                     B,
                                     T,
                                     B2,
                                     T2,
                                     so,
                                     vo,
                                     Lfun,
                                     Rfun,
                                     MaxN,
                                     MaxN,
                                     timestep,
                                     timestep,
                                     AL,
                                     most_urgent,
                                     epsH,
                                     epsV,
                                     UseHCrit,
                                     UseVCrit)")
                                                      (("1"
                                                        (name
                                                         "UnAdjB"
                                                         "scal(anglestep, TrackInt)")
                                                        (("1"
                                                          (name
                                                           "UnModB"
                                                           "add(track(vo), UnAdjB)")
                                                          (("1"
                                                            (case
                                                             "NOT length(UnModB) = length(TrackInt)")
                                                            (("1"
                                                              (expand
                                                               "UnModB"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "add"
                                                                 1)
                                                                (("1"
                                                                  (rewrite
                                                                   "map_length")
                                                                  (("1"
                                                                    (expand
                                                                     "UnAdjB"
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "scal"
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "map_length")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "NOT length(UnModB) = length(UnAdjB)")
                                                              (("1"
                                                                (expand
                                                                 "UnModB"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "add"
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     "map_length")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "NOT strictly_increasing_real?(UnAdjB)")
                                                                (("1"
                                                                  (lemma
                                                                   "strictly_increasing_scal")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "kinematic_bands_combine_increasing")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (replace
                                                                             -6)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Lfun"
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "Rfun"
                                                                                   1)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (case
                                                                   "NOT strictly_increasing_real?(UnModB)")
                                                                  (("1"
                                                                    (lemma
                                                                     "strictly_increasing_add_real")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       -12)
                                                                      (("2"
                                                                        (replace
                                                                         -9)
                                                                        (("2"
                                                                          (replace
                                                                           -7)
                                                                          (("2"
                                                                            (replace
                                                                             -14)
                                                                            (("2"
                                                                              (expand
                                                                               "band_to_mod?")
                                                                              (("2"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "add"
                                                                                     +)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "map_nth_rw")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "addrb"
                                                                                         +)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "scal"
                                                                                           +)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scalrb"
                                                                                               +)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "kinematic_bands_combine_range")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (mult-by
                                                                                                               -1
                                                                                                               "anglestep")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (mult-by
                                                                                                                   -2
                                                                                                                   "anglestep")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "Lfun"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (expand
                                                                                                           "Rfun"
                                                                                                           1)
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "add(track(vo), scal(anglestep, TrackInt))")
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "add"
                                                                                           +)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "map_nth_rw")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "addrb"
                                                                                                 +)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "scal"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "map_nth_rw")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "map_nth_rw")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "map_length")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scalrb")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "kinematic_bands_combine_range")
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -9)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -)
                                                                                                                      (("1"
                                                                                                                        (inst-cp
                                                                                                                         -
                                                                                                                         "length(TrackInt)-1")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "0")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "NOT nth(TrackInt, length(TrackInt) - 1)`ub -
        nth(TrackInt, 0)`lb<=2*MaxN")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "anglestep"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (mult-by
                                                                                                                                     -1
                                                                                                                                     "pi")
                                                                                                                                    (("2"
                                                                                                                                      (mult-by
                                                                                                                                       -1
                                                                                                                                       "1/MaxN")
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-1
                                                                                                                                          1))
                                                                                                                                        (("1"
                                                                                                                                          (grind
                                                                                                                                           :exclude
                                                                                                                                           ("nth"
                                                                                                                                            "length"))
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (cross-mult
                                                                                                                                         1)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "Lfun"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (expand
                                                                                                                         "Rfun"
                                                                                                                         1)
                                                                                                                        (("3"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (rewrite
                                                                                                         "map_length"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (replaces
                                                               -1)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("3"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("4"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("5"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((pi const-decl "posreal" atan "trig_fnd/")
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (nnreal type-eq-decl nil real_types nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (> const-decl "bool" reals nil)
                        (length def-decl "nat" list_props nil)
                        (nat nonempty-type-eq-decl nil naturalnumbers
                         nil)
                        (< const-decl "bool" reals nil)
                        (int nonempty-type-eq-decl nil integers nil)
                        (integer_pred const-decl
                                      "[rational -> boolean]" integers
                                      nil)
                        (rational nonempty-type-from-decl nil rationals
                                  nil)
                        (rational_pred const-decl "[real -> boolean]"
                                       rationals nil)
                        (AircraftList type-eq-decl nil int_bands nil)
                        (list type-decl nil list_adt nil)
                        (Aircraft type-eq-decl nil int_bands nil)
                        (string type-eq-decl nil strings nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (>= const-decl "bool" reals nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number nonempty-type-decl nil numbers nil)
                        (AND const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (IFF const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (RealBand type-eq-decl nil real_bands nil)
                        (= const-decl "[T, T -> boolean]" equalities
                           nil)
                        (/= const-decl "boolean" notequal nil)
                        (nzint nonempty-type-eq-decl nil integers nil)
                        (OR const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (Sign type-eq-decl nil sign "reals/")
                        (kinematic_trk_bands_init const-decl
                          "list[RealBand]" kinematic_trk_bands nil)
                        (band_to_mod? const-decl "bool" mod_bands nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (IF const-decl "[boolean, T, T -> T]" if_def
                         nil)
                        (- const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (<= const-decl "bool" reals nil)
                        (+ const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (round const-decl
                               "{j: int | r - 1 / 2 < j AND j <= r + 1 / 2}"
                               kinematic_trk_bands nil)
                        (nznum nonempty-type-eq-decl nil number_fields
                         nil)
                        (/ const-decl "[numfield, nznum -> numfield]"
                           number_fields nil)
                        (integer nonempty-type-from-decl nil integers
                         nil)
                        (ceiling const-decl "{i | x <= i & i < x + 1}"
                                 floor_ceil nil)
                        (MaxN skolem-const-decl "int"
                         kinematic_trk_bands nil)
                        (mult_divides2 application-judgement
                         "(divides(m))" divides nil)
                        (mult_divides1 application-judgement
                         "(divides(n))" divides nil)
                        (even_times_int_is_even application-judgement
                         "even_int" integers nil)
                        (div_mult_pos_gt1 formula-decl nil
                         extra_real_props nil)
                        (anglestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (IntBand type-eq-decl nil int_bands nil)
                        (Traj type-eq-decl nil int_bands nil)
                        (kinematic_bands_combine const-decl
                          "list[IntBand]" combine_bands nil)
                        (add const-decl
                             "listn[RealBand](length[RealBand](RL))"
                             real_bands nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (* const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (strictly_increasing_add_real formula-decl nil
                         real_bands nil)
                        (map adt-def-decl "list[T1]" list_adt_map nil)
                        (nzrat_div_nzrat_is_nzrat application-judgement
                         "nzrat" rationals nil)
                        (real_div_nzreal_is_real application-judgement
                         "real" reals nil)
                        (atan_value const-decl "real" atan "trig_fnd/")
                        (Integral const-decl "real" integral_def
                         "analysis/")
                        (real_minus_real_is_real application-judgement
                         "real" reals nil)
                        (int_minus_int_is_int application-judgement
                         "int" integers nil)
                        (below type-eq-decl nil naturalnumbers nil)
                        (map_nth_rw formula-decl nil more_map_props
                         nil)
                        (real_times_real_is_real application-judgement
                         "real" reals nil)
                        (real_plus_real_is_real application-judgement
                         "real" reals nil)
                        (real_le_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (minus_int_is_int application-judgement "int"
                         integers nil)
                        (both_sides_times_pos_le1_imp formula-decl nil
                         extra_real_props nil)
                        (below type-eq-decl nil nat_types nil)
                        (nth def-decl "T" list_props nil)
                        (kinematic_bands_combine_range formula-decl nil
                         combine_bands nil)
                        (strictly_increasing_scal formula-decl nil
                         real_bands nil)
                        (Rfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (Lfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (kinematic_bands_combine_increasing
                         formula-decl nil combine_bands nil)
                        (strictly_increasing_real? const-decl "bool"
                         real_bands nil)
                        (UnModB skolem-const-decl
                         "listn[RealBand](length[RealBand](UnAdjB))"
                         kinematic_trk_bands nil)
                        (addrb const-decl "RealBand" real_bands nil)
                        (map_length formula-decl nil more_map_props
                         nil)
                        (scalrb const-decl "RealBand" real_bands nil)
                        (UnAdjB skolem-const-decl
                         "listn[RealBand](length[IntBand](TrackInt))"
                         kinematic_trk_bands nil)
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (scal const-decl
                              "listn[RealBand](length[IntBand](L))"
                              real_bands nil)
                        (listn type-eq-decl nil listn "structures/")
                        (timestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (nzreal nonempty-type-eq-decl nil reals nil)
                        (nzreal_div_nzreal_is_nzreal
                         application-judgement "nzreal" real_types nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (posreal_times_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil)
                        (div_mult_pos_ge1 formula-decl nil real_props
                         nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/"))
                       nil)
                      (kinematic_trk_bands_init_b2m-3 nil 3632240405
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (expand "kinematic_trk_bands_init" :assert?
                                    none)
                            ((""
                              (name "Lfun"
                                    "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                              ((""
                                (replaces -1)
                                ((""
                                  (name
                                   "Rfun"
                                   "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                  ((""
                                    (replaces -1)
                                    ((""
                                      (name
                                       "MaxN"
                                       "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                    ELSE ceiling(pi / step)
                                                                                    ENDIF)")
                                      ((""
                                        (case "NOT MaxN>=1")
                                        (("1"
                                          (hide -2)
                                          (("1"
                                            (replaces -1 1 :dir rl)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (case "NOT pi/step>=1")
                                                (("1"
                                                  (cross-mult 1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (ground)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replaces -2)
                                          (("2"
                                            (name "newstep" "pi/MaxN")
                                            (("1"
                                              (case
                                               "NOT (newstep > 0 AND pi/newstep = MaxN)")
                                              (("1"
                                                (expand "newstep" 1)
                                                (("1"
                                                  (hide -3)
                                                  (("1"
                                                    (cross-mult 1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (name
                                                   "TrackInt"
                                                   "kinematic_bands_combine(LOS,
                                     CD,
                                     B,
                                     T,
                                     so,
                                     vo,
                                     Lfun,
                                     Rfun,
                                     MaxN,
                                     MaxN,
                                     newstep,
                                     newstep,
                                     AL,
                                     most_urgent,
                                     epsH,
                                     epsV,
                                     UseHCrit,
                                     UseVCrit)")
                                                  (("1"
                                                    (name
                                                     "UnAdjB"
                                                     "scal(newstep, TrackInt)")
                                                    (("1"
                                                      (name
                                                       "UnModB"
                                                       "add(track(vo), UnAdjB)")
                                                      (("1"
                                                        (case
                                                         "NOT length(UnModB) = length(TrackInt)")
                                                        (("1"
                                                          (expand
                                                           "UnModB"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "add"
                                                             1)
                                                            (("1"
                                                              (rewrite
                                                               "map_length")
                                                              (("1"
                                                                (expand
                                                                 "UnAdjB"
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "scal"
                                                                   1)
                                                                  (("1"
                                                                    (rewrite
                                                                     "map_length")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "NOT length(UnModB) = length(UnAdjB)")
                                                          (("1"
                                                            (expand
                                                             "UnModB"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "add"
                                                               1)
                                                              (("1"
                                                                (rewrite
                                                                 "map_length")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "NOT increasing_real?(UnAdjB)")
                                                            (("1"
                                                              (expand
                                                               "increasing_real?"
                                                               1)
                                                              (("1"
                                                                (split
                                                                 +)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (expand
                                                                     "UnAdjB"
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "scal"
                                                                       1)
                                                                      (("1"
                                                                        (lift-if
                                                                         +)
                                                                        (("1"
                                                                          (split
                                                                           +)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_nth_rw")
                                                                              (("1"
                                                                                (expand
                                                                                 "scal"
                                                                                 +)
                                                                                (("1"
                                                                                  (lift-if
                                                                                   +)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "kinematic_bands_combine_increasing")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -7)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "increasing_int?")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "i")
                                                                                                    (("1"
                                                                                                      (mult-by
                                                                                                       -1
                                                                                                       "newstep")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "Lfun"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (expand
                                                                                                 "Rfun"
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (expand
                                                                     "UnAdjB"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "scal"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (rewrite
                                                                           "map_nth_rw")
                                                                          (("2"
                                                                            (rewrite
                                                                             "map_nth_rw")
                                                                            (("2"
                                                                              (expand
                                                                               "scal"
                                                                               1)
                                                                              (("2"
                                                                                (lemma
                                                                                 "kinematic_bands_combine_increasing")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -7)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (split
                                                                                         -)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "increasing_int?")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "i"
                                                                                               "j")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (mult-by
                                                                                                   -2
                                                                                                   "newstep")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "Lfun"
                                                                                           1)
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "Rfun"
                                                                                           1)
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "NOT increasing_real?(UnModB)")
                                                              (("1"
                                                                (expand
                                                                 "increasing_real?")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (hide
                                                                     -12)
                                                                    (("1"
                                                                      (split
                                                                       +)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (expand
                                                                           "UnModB"
                                                                           +)
                                                                          (("1"
                                                                            (expand
                                                                             "add"
                                                                             +)
                                                                            (("1"
                                                                              (rewrite
                                                                               "map_nth_rw")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "i")
                                                                                (("1"
                                                                                  (expand
                                                                                   "add"
                                                                                   +)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "i"
                                                                           "j")
                                                                          (("1"
                                                                            (expand
                                                                             "UnModB"
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "add"
                                                                               +)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "map_nth_rw")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "map_nth_rw")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "add"
                                                                                     +)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace
                                                                   -10)
                                                                  (("2"
                                                                    (replace
                                                                     -7)
                                                                    (("2"
                                                                      (replace
                                                                       -6)
                                                                      (("2"
                                                                        (replace
                                                                         -5)
                                                                        (("2"
                                                                          (replace
                                                                           -12)
                                                                          (("2"
                                                                            (expand
                                                                             "band_to_mod?")
                                                                            (("2"
                                                                              (split
                                                                               +)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (expand
                                                                                   "UnModB"
                                                                                   +)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "add"
                                                                                     +)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "map_nth_rw")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "add"
                                                                                         +)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "UnAdjB"
                                                                                           +)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "scal"
                                                                                             +)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "map_nth_rw")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "kinematic_bands_combine_range")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -8)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -11
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -11
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (mult-by
                                                                                                                     -1
                                                                                                                     "newstep")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (mult-by
                                                                                                                         -2
                                                                                                                         "newstep")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "Lfun"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (expand
                                                                                                             "Rfun"
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -5
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "UnModB"
                                                                                     +)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "add"
                                                                                       +)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "map_nth_rw")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "map_nth_rw")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "add"
                                                                                             +)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "UnAdjB"
                                                                                                 +)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "scal"
                                                                                                   +)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "map_nth_rw")
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "map_nth_rw")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "scal")
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "kinematic_bands_combine_range")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -9)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (inst-cp
                                                                                                                     -
                                                                                                                     "length(TrackInt)-1")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "0")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -14
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("1"
                                                                                                                            (cross-mult
                                                                                                                             -4)
                                                                                                                            (("1"
                                                                                                                              (neg-formula
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (cross-mult
                                                                                                                                 -3)
                                                                                                                                (("1"
                                                                                                                                  (neg-formula
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (cross-mult
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (cross-mult
                                                                                                                                       -1)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "Lfun"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (expand
                                                                                                                     "Rfun"
                                                                                                                     1)
                                                                                                                    (("3"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (replaces -1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("5"
                                                    (replace
                                                     -2
                                                     1
                                                     :dir
                                                     rl)
                                                    (("5"
                                                      (cross-mult 1)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("6"
                                                    (expand "Rfun" 1)
                                                    (("6"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("7"
                                                    (expand "Lfun" 1)
                                                    (("7"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (AircraftList type-eq-decl nil int_bands nil)
                        (Aircraft type-eq-decl nil int_bands nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (RealBand type-eq-decl nil real_bands nil)
                        (Sign type-eq-decl nil sign "reals/")
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (IntBand type-eq-decl nil int_bands nil)
                        (Traj type-eq-decl nil int_bands nil)
                        (kinematic_bands_combine const-decl
                          "list[IntBand]" combine_bands nil)
                        (add const-decl
                             "listn[RealBand](length[RealBand](RL))"
                             real_bands nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (kinematic_bands_combine_range formula-decl nil
                         combine_bands nil)
                        (kinematic_bands_combine_increasing
                         formula-decl nil combine_bands nil)
                        (add const-decl
                             "listn[RealBand](length[RealBand](RL))"
                             real_bands nil)
                        (scal const-decl
                              "listn[RealBand](length[IntBand](L))"
                              real_bands nil)
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (scal const-decl
                              "listn[RealBand](length[IntBand](L))"
                              real_bands nil)
                        (listn type-eq-decl nil listn "structures/")
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/"))
                       nil)
                      (kinematic_trk_bands_init_b2m-2 nil 3632240385
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (expand "kinematic_trk_bands_init" :assert?
                                    none)
                            (("" (relabel (:pairing |!skl:1344|) (-1))
                              (("" (postpone) nil))))))))
                        nil)
                       nil nil)
                      (kinematic_trk_bands_init_b2m-1 nil 3632218325
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (expand "kinematic_trk_bands_init" :assert?
                                    none)
                            (("" (relabel (:pairing |!skl:1344|) (-1))
                              (("" (postpone) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       nil shostak))
                     (kinematic_trk_bands_TCC1 0
                      (kinematic_trk_bands_TCC1-1 nil 3632218193
                       ("" (skeep)
                        (("" (lemma "kinematic_trk_bands_init_b2m")
                          (("" (inst?)
                            (("" (assert)
                              ((""
                                (expand "turnOmega" +)
                                ((""
                                  (hide-all-but 1)
                                  ((""
                                    (split)
                                    (("1" (decompose-equality) nil nil)
                                     ("2"
                                      (lemma "trkgs2vect_id")
                                      (("2"
                                        (inst - "vect2(vo)")
                                        (("1"
                                          (expand "ground_speed")
                                          (("1"
                                            (expand "trkgs2vect")
                                            (("1"
                                              (expand "trk")
                                              (("1"
                                                (typepred "vo")
                                                (("1"
                                                  (lemma
                                                   "vectors_2D.sqv_eq_0")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (split +)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (decompose-equality
                                                               2)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "*"
                                                                 -2)
                                                                (("2"
                                                                  (decompose-equality
                                                                   -2)
                                                                  (("2"
                                                                    (decompose-equality
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "vect2")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "vect2")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "vo")
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (decompose-equality) nil nil)
                                     ("4"
                                      (lemma "trkgs2vect_id")
                                      (("4"
                                        (inst - "vect2(vo)")
                                        (("1"
                                          (expand "ground_speed")
                                          (("1"
                                            (expand "trkgs2vect")
                                            (("1"
                                              (expand "trk")
                                              (("1"
                                                (typepred "vo")
                                                (("1"
                                                  (lemma
                                                   "vectors_2D.sqv_eq_0")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (split +)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (decompose-equality
                                                               2)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "*"
                                                                 -2)
                                                                (("2"
                                                                  (decompose-equality
                                                                   -2)
                                                                  (("2"
                                                                    (decompose-equality
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "vect2")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "vect2")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "vo")
                                          (("2"
                                            (lemma
                                             "vectors_2D.sqv_eq_0")
                                            (("2"
                                              (inst?)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((kinematic_trk_bands_init_b2m formula-decl nil
                         kinematic_trk_bands nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (trkgs2vect_id formula-decl nil track
                         "kinematics/")
                        (ground_speed const-decl "nnreal" track_3D
                                      "kinematics/")
                        (trk const-decl "nnreal_lt_2pi" track
                             "kinematics/")
                        (sqv_eq_0 formula-decl nil vectors_2D
                         "vectors/")
                        (real_times_real_is_real application-judgement
                         "real" reals nil)
                        (comp_zero_x formula-decl nil vectors_2D
                         "vectors/")
                        (comp_zero_y formula-decl nil vectors_2D
                         "vectors/")
                        (cos const-decl "real" sincos_def "trig_fnd/")
                        (track const-decl "nnreal_lt_2pi" track
                               "kinematics/")
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (sin const-decl "real" sincos_def "trig_fnd/")
                        (norm const-decl "nnreal" vectors_2D
                              "vectors/")
                        (* const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (* const-decl "Vector" vectors_2D "vectors/")
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (trkgs2vect const-decl "Vect2" track
                         "kinematics/")
                        (Nz_vect2 type-eq-decl nil vectors_2D
                         "vectors/")
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (vo skolem-const-decl
                         "{vo | sqv(vect2(vo)) > 0}"
                         kinematic_trk_bands nil)
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (cos_range application-judgement "trig_range"
                         sincos_def "trig_fnd/")
                        (sin_range application-judgement "trig_range"
                         sincos_def "trig_fnd/")
                        (pi const-decl "posreal" atan "trig_fnd/")
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (length def-decl "nat" list_props nil)
                        (nat nonempty-type-eq-decl nil naturalnumbers
                         nil)
                        (< const-decl "bool" reals nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (> const-decl "bool" reals nil)
                        (AND const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (Sign type-eq-decl nil sign "reals/")
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (= const-decl "[T, T -> boolean]" equalities
                           nil)
                        (OR const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (nzint nonempty-type-eq-decl nil integers nil)
                        (/= const-decl "boolean" notequal nil)
                        (int nonempty-type-eq-decl nil integers nil)
                        (integer_pred const-decl
                                      "[rational -> boolean]" integers
                                      nil)
                        (rational nonempty-type-from-decl nil rationals
                                  nil)
                        (rational_pred const-decl "[real -> boolean]"
                                       rationals nil)
                        (detector? const-decl "bool" int_bands nil)
                        (nnreal type-eq-decl nil real_types nil)
                        (>= const-decl "bool" reals nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (number nonempty-type-decl nil numbers nil)
                        (AircraftList type-eq-decl nil int_bands nil)
                        (list type-decl nil list_adt nil)
                        (Aircraft type-eq-decl nil int_bands nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (string type-eq-decl nil strings nil))
                       nil))
                     (kinematic_trk_bands_def_TCC1 0
                      (kinematic_trk_bands_def_TCC1-1 nil 3632501305
                       ("" (skeep*)
                        (("" (case "pi/step>0")
                          (("1" (assert) nil nil)
                           ("2" (cross-mult 1) nil nil))
                          nil))
                        nil)
                       ((pi const-decl "posreal" atan "trig_fnd/")
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (>= const-decl "bool" reals nil)
                        (/ const-decl "[numfield, nznum -> numfield]"
                           number_fields nil)
                        (nznum nonempty-type-eq-decl nil number_fields
                         nil)
                        (/= const-decl "boolean" notequal nil)
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (> const-decl "bool" reals nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (number nonempty-type-decl nil numbers nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (div_mult_pos_gt1 formula-decl nil
                         extra_real_props nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_bands_def_TCC2 0
                      (kinematic_trk_bands_def_TCC2-1 nil 3632501305
                       ("" (skeep*) (("" (assert) nil nil)) nil)
                       ((nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_bands_def_TCC3 0
                      (kinematic_trk_bands_def_TCC3-1 nil 3632501305
                       ("" (skeep*)
                        (("" (replace -14) (("" (assert) nil nil))
                          nil))
                        nil)
                       ((real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_bands_def 0
                      (kinematic_trk_bands_def-4 nil 3633951483
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (name "Lfun"
                                  "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                            (("" (replaces -1)
                              ((""
                                (name
                                 "Rfun"
                                 "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                ((""
                                  (replaces -1)
                                  ((""
                                    (name
                                     "MaxN"
                                     "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                                     ELSE ceiling(pi / step)
                                                                                                                                     ENDIF)")
                                    ((""
                                      (case "NOT MaxN>=1")
                                      (("1"
                                        (hide -2)
                                        (("1"
                                          (replaces -1 1 :dir rl)
                                          (("1"
                                            (lift-if)
                                            (("1"
                                              (case "NOT pi/step>=1")
                                              (("1"
                                                (cross-mult 1)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2" (ground) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (replaces -2)
                                        (("2"
                                          (name "anglestep" "pi/MaxN")
                                          (("1"
                                            (case
                                             "NOT (anglestep > 0 AND pi/anglestep = MaxN)")
                                            (("1"
                                              (expand "anglestep" 1)
                                              (("1"
                                                (hide -3)
                                                (("1"
                                                  (cross-mult 1)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (name
                                                 "timestep"
                                                 "anglestep/omega")
                                                (("2"
                                                  (case
                                                   "NOT timestep>0")
                                                  (("1"
                                                    (expand
                                                     "timestep"
                                                     1)
                                                    (("1"
                                                      (cross-mult 1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (name
                                                     "TrackInt"
                                                     "kinematic_bands_combine(LOS,
                                                                                  CD,
                                                                                  LOS2,
                                                                                  CD2,
                                                                                  UseLOS2,
                                                                                  B,
                                                                                  T,
                                                                                  B2,
                                                                                  T2,
                                                                                  so,
                                                                                  vo,
                                                                                  Lfun,
                                                                                  Rfun,
                                                                                  MaxN,
                                                                                  MaxN,
                                                                                  timestep,
                                                                                  timestep,
                                                                                  AL,
                                                                                  most_urgent,
                                                                                  epsH,
                                                                                  epsV,
                                                                                  UseHCrit,
                                                                                  UseVCrit)")
                                                    (("1"
                                                      (name
                                                       "UnAdjB"
                                                       "scal(anglestep, TrackInt)")
                                                      (("1"
                                                        (name
                                                         "UnModB"
                                                         "add(track(vo), UnAdjB)")
                                                        (("1"
                                                          (case
                                                           "NOT length(UnModB) = length(TrackInt)")
                                                          (("1"
                                                            (expand
                                                             "UnModB"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "add"
                                                               1)
                                                              (("1"
                                                                (rewrite
                                                                 "map_length")
                                                                (("1"
                                                                  (expand
                                                                   "UnAdjB"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "scal"
                                                                     1)
                                                                    (("1"
                                                                      (rewrite
                                                                       "map_length")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "NOT length(UnModB) = length(UnAdjB)")
                                                            (("1"
                                                              (expand
                                                               "UnModB"
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "add"
                                                                 1)
                                                                (("1"
                                                                  (rewrite
                                                                   "map_length")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "NOT strictly_increasing_real?(UnAdjB)")
                                                              (("1"
                                                                (hide
                                                                 2)
                                                                (("1"
                                                                  (lemma
                                                                   "strictly_increasing_scal")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "kinematic_bands_combine_increasing")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (replace
                                                                             -6)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 +)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Lfun"
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "Rfun"
                                                                                   1)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "NOT strictly_increasing_real?(UnModB)")
                                                                (("1"
                                                                  (expand
                                                                   "UnModB"
                                                                   1)
                                                                  (("1"
                                                                    (hide
                                                                     2)
                                                                    (("1"
                                                                      (lemma
                                                                       "strictly_increasing_add_real")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (replace
                                                                     -12)
                                                                    (("2"
                                                                      (replace
                                                                       -9)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (expand
                                                                           "kinematic_trk_bands")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lemma
                                                                               "MaxN")
                                                                              (("2"
                                                                                (expand
                                                                                 "kinematic_trk_bands_init")
                                                                                (("2"
                                                                                  (replace
                                                                                   -1
                                                                                   :dir
                                                                                   rl)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -16)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -15)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -13)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -10)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -8)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -7)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -6)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "kinematic_bands_combine_def")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -9)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "dir*j")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "dir = -1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "NOT dir = 1")
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "dir")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (case
                                                                                                                                 "NOT j = 0")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replaces
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "conflict_steps_eq")
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "Rfun")
                                                                                                                                          (("2"
                                                                                                                                            (replaces
                                                                                                                                             -1
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("2"
                                                                                                                                              (insteep
                                                                                                                                               -
                                                                                                                                               :but
                                                                                                                                               ("trajl"
                                                                                                                                                "trajr"
                                                                                                                                                "tsl"
                                                                                                                                                "tsr"
                                                                                                                                                "useLOS2"))
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "Lfun"
                                                                                                                                                 "Rfun"
                                                                                                                                                 "timestep"
                                                                                                                                                 "timestep"
                                                                                                                                                 "UseLOS2")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "Lfun"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "Rfun"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (split
                                                                                                                                                         +)
                                                                                                                                                        (("1"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "dir = 1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "NOT dir = -1")
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "dir")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT j = 0")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (replaces
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (replaces
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "conflict_steps_eq")
                                                                                                                                            (("2"
                                                                                                                                              (insteep
                                                                                                                                               -
                                                                                                                                               :but
                                                                                                                                               ("trajl"
                                                                                                                                                "trajr"
                                                                                                                                                "tsl"
                                                                                                                                                "tsr"
                                                                                                                                                "useLOS2"))
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "Lfun"
                                                                                                                                                 "Rfun"
                                                                                                                                                 "timestep"
                                                                                                                                                 "timestep"
                                                                                                                                                 "UseLOS2")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "Lfun"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "Rfun"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (split
                                                                                                                                                         +)
                                                                                                                                                        (("1"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (copy
                                                                                                                           -19)
                                                                                                                          (("3"
                                                                                                                            (skeep
                                                                                                                             -)
                                                                                                                            (("3"
                                                                                                                              (replace
                                                                                                                               -21
                                                                                                                               -1)
                                                                                                                              (("3"
                                                                                                                                (typepred
                                                                                                                                 "band_mod_2pi(UnModB)")
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "track_band?")
                                                                                                                                  (("3"
                                                                                                                                    (flatten)
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -4
                                                                                                                                       "to2pi(track(vo) + j * (dir * anglestep))")
                                                                                                                                      (("3"
                                                                                                                                        (split
                                                                                                                                         -4)
                                                                                                                                        (("1"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "r!1 = track(vo) + j * (dir * anglestep)")
                                                                                                                                            (("1"
                                                                                                                                              (replaces
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "UnModB"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "add"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "map_nth_rw")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "UnAdjB"
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "scal"
                                                                                                                                                         -)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "map_nth_rw")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "in?"
                                                                                                                                                             (-1
                                                                                                                                                              1))
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "addrb"
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "scalrb"
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "j!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         +)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (mult-by
                                                                                                                                                                           1
                                                                                                                                                                           "anglestep")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (mult-by
                                                                                                                                                                           1
                                                                                                                                                                           "anglestep")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (name
                                                                                                                                                 "y"
                                                                                                                                                 "track(vo)+j*dir*anglestep")
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "j")
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "to2pi_equal")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "r!1"
                                                                                                                                                       "y")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -3)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (skeep
                                                                                                                                                               -)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "abs(r!1-y)<2*pi")
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -2
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "k = 0")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "abs_mult")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "abs_mult")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "abs"
                                                                                                                                                                             -1
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "abs"
                                                                                                                                                                               -1
                                                                                                                                                                               2)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "abs(k) < 1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "abs"
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (mult-by
                                                                                                                                                                                   1
                                                                                                                                                                                   "2*pi")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "abs(track(vo)-r!1)<=pi AND abs(track(vo)-y)<pi")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "abs"
                                                                                                                                                                       (-1
                                                                                                                                                                        -2
                                                                                                                                                                        1))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (ground)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (split
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (copy
                                                                                                                                                                       -4)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "UnModB")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "add"
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "map_nth_rw")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "UnAdjB"
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "scal"
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "map_nth_rw")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "in?"
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "addrb"
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "scalrb"
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "kinematic_bands_combine_range")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -19)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       -)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "j!1")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (mult-by
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "anglestep")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (mult-by
                                                                                                                                                                                                               -2
                                                                                                                                                                                                               "anglestep")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (case
                                                                                                                                                                                                                 "MaxN*anglestep>=0 AND MaxN*anglestep<=pi")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "abs"
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (ground)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   +)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                     "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "Lfun"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "Rfun"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -3
                                                                                                                                                                         1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "abs_mult"
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "abs"
                                                                                                                                                                               1
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "abs(anglestep*dir*j) = abs(j*anglestep)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replaces
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "j"
                                                                                                                                                                                         "anglestep")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "abs"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "anglestep"
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "j/MaxN<1")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "pi")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (cross-mult
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (typepred
                                                                                                                                                                                     "dir")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (hide
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "abs")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lemma
                                                                                                                                                                                                 "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -
                                                                                                                                                                                                   "anglestep"
                                                                                                                                                                                                   "j")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (ground)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (copy
                                                                                                                                           -23)
                                                                                                                                          (("2"
                                                                                                                                            (skosimp*)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "i!1")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("3"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "j = 0")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (case
                                                                                                                         "MaxN/j >=1")
                                                                                                                        (("1"
                                                                                                                          (cross-mult
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (typepred
                                                                                                                             "dir")
                                                                                                                            (("1"
                                                                                                                              (ground)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (cross-mult
                                                                                                                           1)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (typepred
                                                                                                                     "dir")
                                                                                                                    (("3"
                                                                                                                      (ground)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "Lfun"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (expand
                                                                                                               "Rfun"
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (replaces
                                                             -1)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("3"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("4"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((pi const-decl "posreal" atan "trig_fnd/")
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (detector? const-decl "bool" int_bands nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (nnreal type-eq-decl nil real_types nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (> const-decl "bool" reals nil)
                        (length def-decl "nat" list_props nil)
                        (nat nonempty-type-eq-decl nil naturalnumbers
                         nil)
                        (< const-decl "bool" reals nil)
                        (int nonempty-type-eq-decl nil integers nil)
                        (integer_pred const-decl
                                      "[rational -> boolean]" integers
                                      nil)
                        (rational nonempty-type-from-decl nil rationals
                                  nil)
                        (rational_pred const-decl "[real -> boolean]"
                                       rationals nil)
                        (AircraftList type-eq-decl nil int_bands nil)
                        (list type-decl nil list_adt nil)
                        (Aircraft type-eq-decl nil int_bands nil)
                        (string type-eq-decl nil strings nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (>= const-decl "bool" reals nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number nonempty-type-decl nil numbers nil)
                        (AND const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (nzreal_times_nzreal_is_nzreal
                         application-judgement "nzreal" real_types nil)
                        (real_plus_real_is_real application-judgement
                         "real" reals nil)
                        (nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (TRUE const-decl "bool" booleans nil)
                        (id const-decl "(bijective?[T, T])" identity
                            nil)
                        (bijective? const-decl "bool" functions nil)
                        (RealBand type-eq-decl nil real_bands nil)
                        (IMPLIES const-decl "[bool, bool -> bool]"
                         booleans nil)
                        (= const-decl "[T, T -> boolean]" equalities
                           nil)
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (- const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (<= const-decl "bool" reals nil)
                        (+ const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (round const-decl
                               "{j: int | r - 1 / 2 < j AND j <= r + 1 / 2}"
                               kinematic_trk_bands nil)
                        (/= const-decl "boolean" notequal nil)
                        (nznum nonempty-type-eq-decl nil number_fields
                         nil)
                        (/ const-decl "[numfield, nznum -> numfield]"
                           number_fields nil)
                        (nzint nonempty-type-eq-decl nil integers nil)
                        (OR const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (Sign type-eq-decl nil sign "reals/")
                        (kinematic_trk_bands const-decl
                                             "list[RealBand]"
                                             kinematic_trk_bands nil)
                        (integer nonempty-type-from-decl nil integers
                         nil)
                        (ceiling const-decl "{i | x <= i & i < x + 1}"
                                 floor_ceil nil)
                        (nonneg_int nonempty-type-eq-decl nil integers
                         nil)
                        (posnat nonempty-type-eq-decl nil integers nil)
                        (IF const-decl "[boolean, T, T -> T]" if_def
                         nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (IFF const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (to2pi const-decl "nnreal_lt_2pi" to2pi
                         "kinematics/")
                        (nth def-decl "T" list_props nil)
                        (below type-eq-decl nil nat_types nil)
                        (in? const-decl "bool" real_bands nil)
                        (below type-eq-decl nil naturalnumbers nil)
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (conflict_step const-decl "bool" int_bands nil)
                        (Traj type-eq-decl nil int_bands nil)
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (* const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (div_mult_pos_ge1 formula-decl nil real_props
                         nil)
                        (posreal_times_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (nzreal_div_nzreal_is_nzreal
                         application-judgement "nzreal" real_types nil)
                        (real_times_real_is_real application-judgement
                         "real" reals nil)
                        (nzreal nonempty-type-eq-decl nil reals nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (timestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (listn type-eq-decl nil listn "structures/")
                        (scal const-decl
                              "listn[RealBand](length[IntBand](L))"
                              real_bands nil)
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (UnAdjB skolem-const-decl
                         "listn[RealBand](length[IntBand](TrackInt))"
                         kinematic_trk_bands nil)
                        (scalrb const-decl "RealBand" real_bands nil)
                        (map_length formula-decl nil more_map_props
                         nil)
                        (addrb const-decl "RealBand" real_bands nil)
                        (UnModB skolem-const-decl
                         "listn[RealBand](length[RealBand](UnAdjB))"
                         kinematic_trk_bands nil)
                        (strictly_increasing_real? const-decl "bool"
                         real_bands nil)
                        (strictly_increasing_scal formula-decl nil
                         real_bands nil)
                        (Rfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (Lfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (kinematic_bands_combine_increasing
                         formula-decl nil combine_bands nil)
                        (minus_int_is_int application-judgement "int"
                         integers nil)
                        (minus_real_is_real application-judgement
                         "real" reals nil)
                        (minus_nzint_is_nzint application-judgement
                         "nzint" integers nil)
                        (div_mult_pos_lt1 formula-decl nil real_props
                         nil)
                        (both_sides_times_pos_lt1 formula-decl nil
                         real_props nil)
                        (rat_div_nzrat_is_rat application-judgement
                         "rat" rationals nil)
                        (kinematic_bands_combine_range formula-decl nil
                         combine_bands nil)
                        (nnreal_times_nnreal_is_nnreal judgement-tcc
                         nil real_types nil)
                        (both_sides_times_pos_le1_imp formula-decl nil
                         extra_real_props nil)
                        (nonzero_abs_is_pos application-judgement
                         "{y: posreal | y >= x}" real_defs nil)
                        (int_abs_is_nonneg application-judgement
                         "{j: nonneg_int | j >= i}" real_defs nil)
                        (both_sides_times_pos_ge1_imp formula-decl nil
                         extra_real_props nil)
                        (nzint_abs_is_pos application-judgement
                         "{j: posint | j >= i}" real_defs nil)
                        (abs_mult formula-decl nil real_props nil)
                        (abs const-decl
                             "{n: nonneg_real | n >= m AND n >= -m}"
                             real_defs nil)
                        (real_minus_real_is_real application-judgement
                         "real" reals nil)
                        (to2pi_equal formula-decl nil to2pi
                         "kinematics/")
                        (both_sides_times_pos_le1 formula-decl nil
                         real_props nil)
                        (in? const-decl "bool" int_bands nil)
                        (map_nth_rw formula-decl nil more_map_props
                         nil)
                        (band_mod_2pi const-decl "(track_band?(RL))"
                                      mod_bands nil)
                        (band_to_mod? const-decl "bool" mod_bands nil)
                        (track_band? const-decl "bool" mod_bands nil)
                        (minus_even_is_even application-judgement
                         "even_int" integers nil)
                        (nnint_times_nnint_is_nnint
                         application-judgement "nonneg_int" integers
                         nil)
                        (conflict_steps_eq formula-decl nil
                         combine_bands nil)
                        (int_times_even_is_even application-judgement
                         "even_int" integers nil)
                        (minus_odd_is_odd application-judgement
                         "odd_int" integers nil)
                        (real_le_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (kinematic_bands_combine_def formula-decl nil
                         combine_bands nil)
                        (kinematic_trk_bands_init const-decl
                          "list[RealBand]" kinematic_trk_bands nil)
                        (strictly_increasing_add_real formula-decl nil
                         real_bands nil)
                        (add const-decl
                             "listn[RealBand](length[RealBand](RL))"
                             real_bands nil)
                        (kinematic_bands_combine const-decl
                          "list[IntBand]" combine_bands nil)
                        (IntBand type-eq-decl nil int_bands nil)
                        (anglestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (div_mult_pos_gt1 formula-decl nil
                         extra_real_props nil)
                        (even_times_int_is_even application-judgement
                         "even_int" integers nil)
                        (mult_divides1 application-judgement
                         "(divides(n))" divides nil)
                        (mult_divides2 application-judgement
                         "(divides(m))" divides nil)
                        (MaxN skolem-const-decl "int"
                         kinematic_trk_bands nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil)
                      (kinematic_trk_bands_def-3 nil 3632653294
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (name "MaxN"
                                  "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                              ELSE ceiling(pi / step)
                                                                                                                              ENDIF)")
                            (("" (replace -1)
                              ((""
                                (name "newstep" "pi/MaxN")
                                (("1"
                                  (expand
                                   "kinematic_trk_bands"
                                   :assert?
                                   none)
                                  (("1"
                                    (skoletin -3)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -3)
                                        (("1"
                                          (expand
                                           "kinematic_trk_bands_init"
                                           :assert?
                                           none)
                                          (("1"
                                            (name
                                             "Lfun"
                                             "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                                            (("1"
                                              (replaces -1)
                                              (("1"
                                                (name
                                                 "Rfun"
                                                 "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (case
                                                     "NOT MaxN>=1")
                                                    (("1"
                                                      (hide -2)
                                                      (("1"
                                                        (replaces
                                                         -1
                                                         1
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (case
                                                             "NOT pi/step>=1")
                                                            (("1"
                                                              (cross-mult
                                                               1)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (case
                                                       "NOT (newstep > 0 AND pi/newstep = MaxN)")
                                                      (("1"
                                                        (expand
                                                         "newstep"
                                                         1)
                                                        (("1"
                                                          (hide -3)
                                                          (("1"
                                                            (cross-mult
                                                             1)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (name
                                                           "LIB"
                                                           "kinematic_bands(LOS, CD, B, T, so, vo, Lfun, MaxN, newstep, AL,
                                                                                                                                                                                                                       most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                                          (("1"
                                                            (name
                                                             "RIB"
                                                             "kinematic_bands(LOS, CD, B, T, so, vo, Rfun, MaxN, newstep, AL,
                                                                                                                                                                                                                                                       most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                                            (("1"
                                                              (name
                                                               "RealLB"
                                                               "scal(-newstep, LIB)")
                                                              (("1"
                                                                (name
                                                                 "RealRB"
                                                                 "scal(newstep, RIB)")
                                                                (("1"
                                                                  (name
                                                                   "UnAdjB"
                                                                   " IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                                                           length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                                                            nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`lb = 0
                                                                                                                                                                                                                                                                         THEN append(append(remove_last(RealLB),
                                                                                                                                                                                                                                                                                            (: (# lb
                                                                                                                                                                                                                                                                                                  := nth
                                                                                                                                                                                                                                                                                                     (RealLB, length(RealLB) - 1)`lb,
                                                                                                                                                                                                                                                                                                  ub := nth(RealRB, 0)`ub #) :)),
                                                                                                                                                                                                                                                                                     cdr(RealRB))
                                                                                                                                                                                                                                                                       ELSE append(RealLB, RealRB)
                                                                                                                                                                                                                                                                       ENDIF")
                                                                  (("1"
                                                                    (name
                                                                     "UnModB"
                                                                     "add(track(vo), UnAdjB)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -13)
                                                                        (("1"
                                                                          (replace
                                                                           -12)
                                                                          (("1"
                                                                            (replace
                                                                             -10)
                                                                            (("1"
                                                                              (replace
                                                                               -6)
                                                                              (("1"
                                                                                (replace
                                                                                 -5)
                                                                                (("1"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT length(RealLB) = length(LIB)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "RealLB"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scal"
                                                                                               1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "length_reverse")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "NOT length(RealRB)=length(RIB)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "RealRB"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "NOT increasing_int?(RIB)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "kinematic_bands_increasing")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "Rfun"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT increasing_int?(LIB)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -8)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "kinematic_bands_increasing")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Lfun"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "NOT increasing_real?(RealRB)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "RealRB"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing_real?"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "scal"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (skeep)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_nth_rw")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "scal"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "increasing_int?"
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -2
                                                                                                                           "newstep")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "map_nth_rw")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "scal"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "increasing_int?"
                                                                                                                       -3)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "i"
                                                                                                                           "j")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (mult-by
                                                                                                                               -4
                                                                                                                               "newstep")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "NOT increasing_real?(RealLB)")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "increasing_real?"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "RealLB"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "reverse_def")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "map_length")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "map_nth_rw")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "scal"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "increasing_int?"
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -2
                                                                                                                                   "newstep")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (rewrite
                                                                                                                     "map_length")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "reverse_def"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "reverse_def"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "map_length")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "map_nth_rw")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "map_nth_rw")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "scal"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing_int?"
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "length(LIB)-1-j"
                                                                                                                                   "length(LIB)-1-i")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (mult-by
                                                                                                                                       -4
                                                                                                                                       "newstep")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (rewrite
                                                                                                                       "map_length")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (rewrite
                                                                                                                     "map_length")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "length_remove_last")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "LIB")
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "RIB")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "proper?")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT (FORALL (i: below(length(RealRB))):
                                                                                                                                                                                                                                                                                                                                                  0 <= nth(RealRB, i)`lb AND
                                                                                                                                                                                                                                                                                                                                                   nth(RealRB, i)`lb <= nth(RealRB, i)`ub AND nth(RealRB, i)`ub <= pi)")
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "i")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "RealRB"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "scal"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "map_nth_rw")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "scal"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -3
                                                                                                                                   "newstep")
                                                                                                                                  (("1"
                                                                                                                                    (mult-by
                                                                                                                                     -3
                                                                                                                                     "newstep")
                                                                                                                                    (("1"
                                                                                                                                      (mult-by
                                                                                                                                       -3
                                                                                                                                       "newstep")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (case
                                                                                                                     "NOT (FORALL (i: below(length(RealLB))):
                                                                                                                                                                                                                                                                                                                                                                      0 >= nth(RealLB, i)`ub AND
                                                                                                                                                                                                                                                                                                                                                                       nth(RealLB, i)`lb <= nth(RealLB, i)`ub AND nth(RealLB, i)`lb >=-pi)")
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       (-1
                                                                                                                        -2))
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "length(LIB)-1-i")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "RealLB"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "scal"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "reverse_def"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "map_length")
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "scal")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (mult-by
                                                                                                                                             -3
                                                                                                                                             "newstep")
                                                                                                                                            (("1"
                                                                                                                                              (mult-by
                                                                                                                                               -3
                                                                                                                                               "newstep")
                                                                                                                                              (("1"
                                                                                                                                                (mult-by
                                                                                                                                                 -3
                                                                                                                                                 "newstep")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (rewrite
                                                                                                                                     "map_length")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (case
                                                                                                                       "NOT length(UnAdjB) = (IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                                                                                          length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                                                                                           nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`lb = 0
                                                                                                                                                                                                                                                                                                        THEN length(RealLB)+length(RealRB)-1
                                                                                                                                                                                                                                                                                                      ELSE length(RealLB)+length(RealRB)
                                                                                                                                                                                                                                                                                                      ENDIF)")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "UnAdjB"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "length_append"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "length_append"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -9)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "length"
                                                                                                                                           1
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lift-if)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   +)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "length(RealRB)>0")
                                                                                                                                                    (("1"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (-1
                                                                                                                                                        -2))
                                                                                                                                                      (("1"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "length_append"
                                                                                                                                 2)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (label
                                                                                                                         "lu"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (skeep)
                                                                                                                          (("2"
                                                                                                                            (copy
                                                                                                                             -22)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "band_mod_2pi_rec(kb)")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "track_band?"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -3
                                                                                                                                       "track(vo) + j * (dir * newstep)")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -26)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -17
                                                                                                                                                 :dir
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "EXISTS (j_1: below(length(kb))):
                                                                                                                                                                                                                    in?(nth(UnAdjB, j_1), j * (dir * newstep))")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp
                                                                                                                                                     -)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       +
                                                                                                                                                       "j!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "add"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "map_nth_rw")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "add"
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "in?")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "(dir = 1 AND EXISTS (jj: below(length(RealRB))): in?(nth(RealRB,jj),j*newstep)) OR (dir=-1 AND EXISTS (jj: below(length(RealLB))): in?(nth(RealLB,jj),-j*newstep))")
                                                                                                                                                      (("1"
                                                                                                                                                        (copy
                                                                                                                                                         -19)
                                                                                                                                                        (("1"
                                                                                                                                                          (replaces
                                                                                                                                                           -1
                                                                                                                                                           1
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (copy
                                                                                                                                                                   -20)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lift-if
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       -)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             +
                                                                                                                                                                             "length(RealLB)-1+jj")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "nth_append")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (rewrite
                                                                                                                                                                                 "length_append")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "nth_append")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "length_remove_last")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (lift-if
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           +)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "NOT jj = 0")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "nth"
                                                                                                                                                                                                     1
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "in?")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "nth(RealLB, length(RealLB) - 1)`lb <=0")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "j"
                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "RealLB"
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                   "length_reverse")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                     "map_length")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                       "reverse_def")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "map_length")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "map_nth_rw")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "scal"
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                                                   -5
                                                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (copy
                                                                                                                                                                                                                                     -19)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                       -
                                                                                                                                                                                                                                       "0")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (mult-by
                                                                                                                                                                                                                                           -2
                                                                                                                                                                                                                                           "newstep")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "map_length"
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -6)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "nth"
                                                                                                                                                                                                     -7)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "length_remove_last")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "nth"
                                                                                                                                                                                         -7)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "length_append")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "length_remove_last")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (typepred
                                                                                                                                                                                         "jj")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "length"
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (split
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -2)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "length(RealLB)+jj")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "nth_append"
                                                                                                                                                                                   2)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -29
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "add"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "map_length")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         "lu"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "Lfun")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replaces
                                                                                                                                                                       -1
                                                                                                                                                                       :dir
                                                                                                                                                                       rl)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (copy
                                                                                                                                                                           -20)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lift-if
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (split
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skeep
                                                                                                                                                                                     -)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       +
                                                                                                                                                                                       "jj")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "nth_append"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "length_append")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "length_remove_last")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "nth_append"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                   "length_remove_last")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (lift-if
                                                                                                                                                                                                       +)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (split
                                                                                                                                                                                                         +)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "remove_last_def")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (case
                                                                                                                                                                                                               "NOT jj = length(RealLB)-1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (typepred
                                                                                                                                                                                                                   "jj")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                     (-1
                                                                                                                                                                                                                      1
                                                                                                                                                                                                                      2))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (case
                                                                                                                                                                                                                       "FORALL (z:nat): jj<z IMPLIES (jj<z-1 OR jj=z-1)")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -
                                                                                                                                                                                                                         "length(RealLB)")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "nth"
                                                                                                                                                                                                                     2
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                         "nth(RealRB,0)`ub>=0")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "in?")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                                               "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                 "j"
                                                                                                                                                                                                                                 "newstep")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           3)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "RealRB"
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                                   "map_nth_rw")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "scal"
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                                         "NOT increasing_int?(RIB)")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "increasing_int?"
                                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                               -
                                                                                                                                                                                                                                               "0")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                 "newstep")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "length_append"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "length_remove_last")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (hide
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skeep
                                                                                                                                                                                     -)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       +
                                                                                                                                                                                       "jj")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "nth_append"
                                                                                                                                                                                         +)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -29)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "add"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "map_length")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "kinematic_bands_def")
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "dir = 1")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "Rfun")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -23)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (split
                                                                                                                                                                                 -)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "bands_sound?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "j")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (copy
                                                                                                                                                                                       -32)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skeep
                                                                                                                                                                                             -2)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               +
                                                                                                                                                                                               "i")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "RealRB"
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "scal"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       "map_nth_rw")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "scal"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           (-2
                                                                                                                                                                                                            1))
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "in?")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 "newstep")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                                   -2
                                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "Rfun"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "dir")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (hide
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (hide
                                                                                                                                                                           -23)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "Lfun")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replaces
                                                                                                                                                                               -1
                                                                                                                                                                               :dir
                                                                                                                                                                               rl)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -23)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "bands_sound?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "j")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -31)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (skeep
                                                                                                                                                                                                 -)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   +
                                                                                                                                                                                                   "length(LIB)-1-i")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "RealLB"
                                                                                                                                                                                                     +)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "scal"
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "reverse_def")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                           "map_length")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "map_nth_rw")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "in?"
                                                                                                                                                                                                                   (-1
                                                                                                                                                                                                                    1))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                       "newstep")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                                         -2
                                                                                                                                                                                                                         "newstep")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                           "map_length")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "Lfun"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (case
                                                                       "length(RealRB)>0")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-1
                                                                          1))
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (flatten)
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (flatten)
                                                                    (("4"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("5"
                                                                    (flatten)
                                                                    (("5"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("6"
                                                                    (flatten)
                                                                    (("6"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("3"
                                                              (expand
                                                               "Rfun"
                                                               1)
                                                              (("3"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             "Lfun"
                                                             1)
                                                            (("4"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (Sign type-eq-decl nil sign "reals/")
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (to2pi const-decl "nnreal_lt_2pi" to2pi
                         "kinematics/")
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (kinematic_bands const-decl "(proper?(MaxN))"
                                         kinematic_bands nil)
                        (listn type-eq-decl nil listn "structures/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (kinematic_bands_increasing formula-decl nil
                         kinematic_bands nil)
                        (length_singleton formula-decl nil
                         more_list_props "structures/")
                        (nth_append formula-decl nil more_list_props
                         "structures/")
                        (kinematic_bands_def formula-decl nil
                         kinematic_bands nil)
                        (max_0_nnreal formula-decl nil min_max
                         "reals/")
                        (reverse_def formula-decl nil more_list_props
                         "structures/"))
                       nil)
                      (kinematic_trk_bands_def-2 nil 3632502352
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (name "MaxN"
                                  "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                ELSE ceiling(pi / step)
                                                                                                                ENDIF)")
                            (("" (replace -1)
                              ((""
                                (name "newstep" "pi/MaxN")
                                (("1"
                                  (expand
                                   "kinematic_trk_bands"
                                   :assert?
                                   none)
                                  (("1"
                                    (skoletin -3)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -3)
                                        (("1"
                                          (expand
                                           "kinematic_trk_bands_init"
                                           :assert?
                                           none)
                                          (("1"
                                            (name
                                             "Lfun"
                                             "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                                            (("1"
                                              (replaces -1)
                                              (("1"
                                                (name
                                                 "Rfun"
                                                 "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                                (("1"
                                                  (replaces -1)
                                                  (("1"
                                                    (case
                                                     "NOT MaxN>=1")
                                                    (("1"
                                                      (hide -2)
                                                      (("1"
                                                        (replaces
                                                         -1
                                                         1
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (case
                                                             "NOT pi/step>=1")
                                                            (("1"
                                                              (cross-mult
                                                               1)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (case
                                                       "NOT (newstep > 0 AND pi/newstep = MaxN)")
                                                      (("1"
                                                        (expand
                                                         "newstep"
                                                         1)
                                                        (("1"
                                                          (hide -3)
                                                          (("1"
                                                            (cross-mult
                                                             1)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (name
                                                           "LIB"
                                                           "kinematic_bands(LOS, CD, B, T, so, vo, Lfun, MaxN, newstep, AL,
                                                                                                                                                                                             most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                                          (("1"
                                                            (name
                                                             "RIB"
                                                             "kinematic_bands(LOS, CD, B, T, so, vo, Rfun, MaxN, newstep, AL,
                                                                                                                                                                                                                         most_urgent, epsH, epsV, UseHCrit, UseVCrit)")
                                                            (("1"
                                                              (name
                                                               "RealLB"
                                                               "scal(-newstep, LIB)")
                                                              (("1"
                                                                (name
                                                                 "RealRB"
                                                                 "scal(newstep, RIB)")
                                                                (("1"
                                                                  (name
                                                                   "UnAdjB"
                                                                   " IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                         length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                          nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`ub = 0
                                                                                                                                                                                                                                       THEN append(append(remove_last(RealLB),
                                                                                                                                                                                                                                                          (: (# lb
                                                                                                                                                                                                                                                                := nth
                                                                                                                                                                                                                                                                   (RealLB, length(RealLB) - 1)`lb,
                                                                                                                                                                                                                                                                ub := nth(RealRB, 0)`ub #) :)),
                                                                                                                                                                                                                                                   cdr(RealRB))
                                                                                                                                                                                                                                     ELSE append(RealLB, RealRB)
                                                                                                                                                                                                                                     ENDIF")
                                                                  (("1"
                                                                    (name
                                                                     "UnModB"
                                                                     "add(track(vo), UnAdjB)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -13)
                                                                        (("1"
                                                                          (replace
                                                                           -12)
                                                                          (("1"
                                                                            (replace
                                                                             -10)
                                                                            (("1"
                                                                              (replace
                                                                               -6)
                                                                              (("1"
                                                                                (replace
                                                                                 -5)
                                                                                (("1"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT length(RealLB) = length(LIB)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "RealLB"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "scal"
                                                                                               1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "length_reverse")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "NOT length(RealRB)=length(RIB)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "RealRB"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "scal"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "map_length")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (case
                                                                                               "NOT increasing_int?(RIB)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "kinematic_bands_increasing")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "Rfun"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "NOT increasing_int?(LIB)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -8)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "kinematic_bands_increasing")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Lfun"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "NOT increasing_real?(RealRB)")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "RealRB"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "increasing_real?"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "scal"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             +)
                                                                                                            (("1"
                                                                                                              (skeep)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "map_nth_rw")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "scal"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "increasing_int?"
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -2
                                                                                                                           "newstep")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "map_nth_rw")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "map_nth_rw")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "scal"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "increasing_int?"
                                                                                                                       -3)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "i"
                                                                                                                           "j")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (mult-by
                                                                                                                               -4
                                                                                                                               "newstep")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "NOT increasing_real?(RealLB)")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "increasing_real?"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "RealLB"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "scal"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "reverse_def")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "map_length")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "map_nth_rw")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "scal"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "increasing_int?"
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -2
                                                                                                                                   "newstep")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (rewrite
                                                                                                                     "map_length")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "reverse_def"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "reverse_def"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "map_length")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "map_nth_rw")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "map_nth_rw")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "scal"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "increasing_int?"
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "length(LIB)-1-j"
                                                                                                                                   "length(LIB)-1-i")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (mult-by
                                                                                                                                       -4
                                                                                                                                       "newstep")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (rewrite
                                                                                                                       "map_length")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (rewrite
                                                                                                                     "map_length")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "length_remove_last")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "LIB")
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "RIB")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "proper?")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "NOT (FORALL (i: below(length(RealRB))):
                                                                                                                                                                                                                                                                                0 <= nth(RealRB, i)`lb AND
                                                                                                                                                                                                                                                                                 nth(RealRB, i)`lb <= nth(RealRB, i)`ub AND nth(RealRB, i)`ub <= pi)")
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "i")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "RealRB"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "scal"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "map_nth_rw")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "scal"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (mult-by
                                                                                                                                   -3
                                                                                                                                   "newstep")
                                                                                                                                  (("1"
                                                                                                                                    (mult-by
                                                                                                                                     -3
                                                                                                                                     "newstep")
                                                                                                                                    (("1"
                                                                                                                                      (mult-by
                                                                                                                                       -3
                                                                                                                                       "newstep")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (case
                                                                                                                     "NOT (FORALL (i: below(length(RealLB))):
                                                                                                                                                                                                                                                                                                0 >= nth(RealLB, i)`ub AND
                                                                                                                                                                                                                                                                                                 nth(RealLB, i)`lb <= nth(RealLB, i)`ub AND nth(RealLB, i)`lb >=-pi)")
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       (-1
                                                                                                                        -2))
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "length(LIB)-1-i")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "RealLB"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "scal"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "reverse_def"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "map_length")
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "scal")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (mult-by
                                                                                                                                             -3
                                                                                                                                             "newstep")
                                                                                                                                            (("1"
                                                                                                                                              (mult-by
                                                                                                                                               -3
                                                                                                                                               "newstep")
                                                                                                                                              (("1"
                                                                                                                                                (mult-by
                                                                                                                                                 -3
                                                                                                                                                 "newstep")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (rewrite
                                                                                                                                     "map_length")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (case
                                                                                                                       "NOT length(UnAdjB) = (IF length[IntBand](LIB) > 0 AND
                                                                                                                                                                                                                                          length[IntBand](RIB) > 0 AND
                                                                                                                                                                                                                                           nth(LIB, 0)`lb = 0 AND nth(RIB, 0)`ub = 0
                                                                                                                                                                                                                                        THEN length(RealLB)+length(RealRB)-1
                                                                                                                                                                                                                                      ELSE length(RealLB)+length(RealRB)
                                                                                                                                                                                                                                      ENDIF)")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "UnAdjB"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "length_append"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "length_append"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -9)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "length"
                                                                                                                                           1
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lift-if)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   +)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "length(RealRB)>0")
                                                                                                                                                    (("1"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (-1
                                                                                                                                                        -2))
                                                                                                                                                      (("1"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "length_append"
                                                                                                                                 2)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (label
                                                                                                                         "lu"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (skeep)
                                                                                                                          (("2"
                                                                                                                            (copy
                                                                                                                             -22)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "band_mod_2pi_rec(kb)")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "track_band?"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -3
                                                                                                                                       "track(vo) + j * (dir * newstep)")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -26)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -17
                                                                                                                                                 :dir
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "EXISTS (j_1: below(length(kb))):
                                                                                                                                                in?(nth(UnAdjB, j_1), j * (dir * newstep))")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp
                                                                                                                                                     -)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       +
                                                                                                                                                       "j!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "add"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "map_nth_rw")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "add"
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "in?")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "(dir = 1 AND EXISTS (jj: below(length(RealRB))): in?(nth(RealRB,jj),j*newstep)) OR (dir=-1 AND EXISTS (jj: below(length(RealLB))): in?(nth(RealLB,jj),-j*newstep))")
                                                                                                                                                      (("1"
                                                                                                                                                        (copy
                                                                                                                                                         -19)
                                                                                                                                                        (("1"
                                                                                                                                                          (replaces
                                                                                                                                                           -1
                                                                                                                                                           1
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep
                                                                                                                                                                 -)
                                                                                                                                                                (("1"
                                                                                                                                                                  (copy
                                                                                                                                                                   -20)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lift-if
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       -)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             +
                                                                                                                                                                             "length(RealLB)-1+jj")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "nth_append")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (rewrite
                                                                                                                                                                                 "length_append")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "nth_append")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "length_remove_last")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (lift-if
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           +)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "NOT jj = 0")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "nth"
                                                                                                                                                                                                     1
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "in?")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "nth(RealLB, length(RealLB) - 1)`lb <=0")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "j"
                                                                                                                                                                                                             "newstep")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "RealLB"
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                   "length_reverse")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                     "map_length")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                       "reverse_def")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "map_length")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "map_nth_rw")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "scal"
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                                                   -5
                                                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (copy
                                                                                                                                                                                                                                     -19)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                       -
                                                                                                                                                                                                                                       "0")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (mult-by
                                                                                                                                                                                                                                           -2
                                                                                                                                                                                                                                           "newstep")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "map_length"
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -6)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "nth"
                                                                                                                                                                                                     -7)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "length_remove_last")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "nth"
                                                                                                                                                                                         -7)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "length_append")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "length_remove_last")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (typepred
                                                                                                                                                                                         "jj")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "length"
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (split
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -2)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "length(RealLB)+jj")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "nth_append"
                                                                                                                                                                                   2)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -29
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "add"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (rewrite
                                                                                                                                                                                     "map_length")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         "lu"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "Lfun")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replaces
                                                                                                                                                                       -1
                                                                                                                                                                       :dir
                                                                                                                                                                       rl)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (copy
                                                                                                                                                                           -20)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lift-if
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (split
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skeep
                                                                                                                                                                                     -)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       +
                                                                                                                                                                                       "jj")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "nth_append"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "length_append")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "length_remove_last")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "nth_append"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                   "length_remove_last")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (lift-if
                                                                                                                                                                                                       +)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (split
                                                                                                                                                                                                         +)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "remove_last_def")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (case
                                                                                                                                                                                                               "NOT jj = length(RealLB)-1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (typepred
                                                                                                                                                                                                                   "jj")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                     (-1
                                                                                                                                                                                                                      1
                                                                                                                                                                                                                      2))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (case
                                                                                                                                                                                                                       "FORALL (z:nat): jj<z IMPLIES (jj<z-1 OR jj=z-1)")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -
                                                                                                                                                                                                                         "length(RealLB)")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "nth"
                                                                                                                                                                                                                     2
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                         "nth(RealRB,0)`ub>=0")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "in?")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                                               "nnreal_times_nnreal_is_nnreal")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                 "j"
                                                                                                                                                                                                                                 "newstep")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           3)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "RealRB"
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                                   "map_nth_rw")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "scal"
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "length_append"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "length_remove_last")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (hide
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skeep
                                                                                                                                                                                     -)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       +
                                                                                                                                                                                       "jj")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "nth_append"
                                                                                                                                                                                         +)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -29)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "add"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "map_length")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "kinematic_bands_def")
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "dir = 1")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "Rfun")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -23)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (split
                                                                                                                                                                                 -)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "bands_sound?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "j")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (copy
                                                                                                                                                                                       -32)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skeep
                                                                                                                                                                                             -2)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               +
                                                                                                                                                                                               "i")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "RealRB"
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "scal"
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                       "map_nth_rw")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "scal"
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           (-2
                                                                                                                                                                                                            1))
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "in?")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 "newstep")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                                   -2
                                                                                                                                                                                                                   "newstep")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "Rfun"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "dir")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (hide
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (hide
                                                                                                                                                                           -23)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "Lfun")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replaces
                                                                                                                                                                               -1
                                                                                                                                                                               :dir
                                                                                                                                                                               rl)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -23)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "bands_sound?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "j")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -31)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (skeep
                                                                                                                                                                                                 -)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   +
                                                                                                                                                                                                   "length(LIB)-1-i")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "RealLB"
                                                                                                                                                                                                     +)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "scal"
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "reverse_def")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                           "map_length")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (rewrite
                                                                                                                                                                                                               "map_nth_rw")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "scal"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "in?"
                                                                                                                                                                                                                   (-1
                                                                                                                                                                                                                    1))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                                       -1
                                                                                                                                                                                                                       "newstep")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                                         -2
                                                                                                                                                                                                                         "newstep")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (rewrite
                                                                                                                                                                                                           "map_length")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "Lfun"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (replaces
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (case
                                                                       "length(RealRB)>0")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         (-1
                                                                          1))
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (flatten)
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (flatten)
                                                                    (("4"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("5"
                                                                    (flatten)
                                                                    (("5"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("6"
                                                                    (flatten)
                                                                    (("6"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("3"
                                                              (expand
                                                               "Rfun"
                                                               1)
                                                              (("3"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             "Lfun"
                                                             1)
                                                            (("4"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (Sign type-eq-decl nil sign "reals/")
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (to2pi const-decl "nnreal_lt_2pi" to2pi
                         "kinematics/")
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (kinematic_bands const-decl "(proper?(MaxN))"
                                         kinematic_bands nil)
                        (listn type-eq-decl nil listn "structures/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (kinematic_bands_increasing formula-decl nil
                         kinematic_bands nil)
                        (length_singleton formula-decl nil
                         more_list_props "structures/")
                        (nth_append formula-decl nil more_list_props
                         "structures/")
                        (kinematic_bands_def formula-decl nil
                         kinematic_bands nil)
                        (max_0_nnreal formula-decl nil min_max
                         "reals/")
                        (reverse_def formula-decl nil more_list_props
                         "structures/"))
                       nil)
                      (kinematic_trk_bands_def-1 nil 3632501459
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (name "MaxN"
                                  "(IF round(pi / step) = pi / step THEN round(pi / step)
             ELSE ceiling(pi / step)
             ENDIF)")
                            (("" (replace -1)
                              ((""
                                (assert)
                                ((""
                                  (skeep)
                                  ((""
                                    (split +)
                                    (("1" (postpone) nil nil)
                                     ("2" (postpone) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       nil shostak))
                     (kinematic_trk_bands_increasing 0
                      (kinematic_trk_bands_increasing-2 nil 3632655590
                       ("" (skeep)
                        (("" (skoletin 1)
                          ((""
                            (name "MaxN"
                                  "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                                                                                                                          ELSE ceiling(pi / step)
                                                                                                                                                          ENDIF)")
                            (("" (name "anglestep" "pi/MaxN")
                              (("1"
                                (expand
                                 "kinematic_trk_bands"
                                 :assert?
                                 none)
                                (("1"
                                  (skoletin -3)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand
                                       "kinematic_trk_bands_init"
                                       :assert?
                                       none)
                                      (("1"
                                        (replace -4)
                                        (("1"
                                          (name
                                           "Lfun"
                                           "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (name
                                               "Rfun"
                                               "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (case "NOT MaxN>=1")
                                                  (("1"
                                                    (hide -2)
                                                    (("1"
                                                      (replaces
                                                       -3
                                                       1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split +)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case
                                                     "NOT (anglestep > 0 AND pi/anglestep = MaxN)")
                                                    (("1"
                                                      (expand
                                                       "anglestep"
                                                       1)
                                                      (("1"
                                                        (hide -3)
                                                        (("1"
                                                          (cross-mult
                                                           1)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (name
                                                         "timestep"
                                                         "anglestep/omega")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (name
                                                             "kbc"
                                                             "kinematic_bands_combine(LOS,
                                        CD,
                                        LOS2,
                                        CD2,
                                        UseLOS2,
                                        B,
                                        T,
                                        B2,
                                        T2,
                                        so,
                                        vo,
                                        Lfun,
                                        Rfun,
                                        MaxN,
                                        MaxN,
                                        pi / MaxN / omega,
                                        pi / MaxN / omega,
                                        AL,
                                        most_urgent,
                                        epsH,
                                        epsV,
                                        UseHCrit,
                                        UseVCrit)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (case
                                                                 "strictly_increasing_real?(kb)")
                                                                (("1"
                                                                  (replace
                                                                   -7
                                                                   +)
                                                                  (("1"
                                                                    (typepred
                                                                     "band_mod_2pi(kb)")
                                                                    (("1"
                                                                      (expand
                                                                       "track_band?"
                                                                       -1)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (replace
                                                                     -7
                                                                     1)
                                                                    (("2"
                                                                      (lemma
                                                                       "strictly_increasing_add_real")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (lemma
                                                                               "strictly_increasing_scal")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "kinematic_bands_combine_increasing")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Lfun"
                                                                                             1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Rfun"
                                                                                               1)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -15)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (cross-mult
                                                                                             1)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (cross-mult
                                                               1)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (assert)
                                (("2"
                                  (expand "MaxN" 1)
                                  (("2"
                                    (lift-if 1)
                                    (("2" (ground) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((pi const-decl "posreal" atan "trig_fnd/")
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (detector? const-decl "bool" int_bands nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (nnreal type-eq-decl nil real_types nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (> const-decl "bool" reals nil)
                        (length def-decl "nat" list_props nil)
                        (nat nonempty-type-eq-decl nil naturalnumbers
                         nil)
                        (< const-decl "bool" reals nil)
                        (int nonempty-type-eq-decl nil integers nil)
                        (integer_pred const-decl
                                      "[rational -> boolean]" integers
                                      nil)
                        (rational nonempty-type-from-decl nil rationals
                                  nil)
                        (rational_pred const-decl "[real -> boolean]"
                                       rationals nil)
                        (AircraftList type-eq-decl nil int_bands nil)
                        (list type-decl nil list_adt nil)
                        (Aircraft type-eq-decl nil int_bands nil)
                        (string type-eq-decl nil strings nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (>= const-decl "bool" reals nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number nonempty-type-decl nil numbers nil)
                        (AND const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (IFF const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (RealBand type-eq-decl nil real_bands nil)
                        (= const-decl "[T, T -> boolean]" equalities
                           nil)
                        (/= const-decl "boolean" notequal nil)
                        (nzint nonempty-type-eq-decl nil integers nil)
                        (OR const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (Sign type-eq-decl nil sign "reals/")
                        (kinematic_trk_bands const-decl
                                             "list[RealBand]"
                                             kinematic_trk_bands nil)
                        (strictly_increasing_real? const-decl "bool"
                         real_bands nil)
                        (nzreal_div_nzreal_is_nzreal
                         application-judgement "nzreal" real_types nil)
                        (nzreal nonempty-type-eq-decl nil reals nil)
                        (TRUE const-decl "bool" booleans nil)
                        (id const-decl "(bijective?[T, T])" identity
                            nil)
                        (bijective? const-decl "bool" functions nil)
                        (band_to_mod? const-decl "bool" mod_bands nil)
                        (kinematic_trk_bands_init const-decl
                          "list[RealBand]" kinematic_trk_bands nil)
                        (IMPLIES const-decl "[bool, bool -> bool]"
                         booleans nil)
                        (track_band? const-decl "bool" mod_bands nil)
                        (band_mod_2pi const-decl "(track_band?(RL))"
                                      mod_bands nil)
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (strictly_increasing_add_real formula-decl nil
                         real_bands nil)
                        (strictly_increasing_scal formula-decl nil
                         real_bands nil)
                        (kinematic_bands_combine_increasing
                         formula-decl nil combine_bands nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (div_mult_pos_ge1 formula-decl nil real_props
                         nil)
                        (Rfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (Lfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (omega skolem-const-decl "posreal"
                         kinematic_trk_bands nil)
                        (listn type-eq-decl nil listn "structures/")
                        (scal const-decl
                              "listn[RealBand](length[IntBand](L))"
                              real_bands nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (* const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (kinematic_bands_combine const-decl
                          "list[IntBand]" combine_bands nil)
                        (Traj type-eq-decl nil int_bands nil)
                        (IntBand type-eq-decl nil int_bands nil)
                        (anglestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (div_mult_pos_gt1 formula-decl nil
                         extra_real_props nil)
                        (even_times_int_is_even application-judgement
                         "even_int" integers nil)
                        (mult_divides1 application-judgement
                         "(divides(n))" divides nil)
                        (mult_divides2 application-judgement
                         "(divides(m))" divides nil)
                        (MaxN skolem-const-decl "int"
                         kinematic_trk_bands nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (ceiling const-decl "{i | x <= i & i < x + 1}"
                                 floor_ceil nil)
                        (integer nonempty-type-from-decl nil integers
                         nil)
                        (/ const-decl "[numfield, nznum -> numfield]"
                           number_fields nil)
                        (nznum nonempty-type-eq-decl nil number_fields
                         nil)
                        (round const-decl
                               "{j: int | r - 1 / 2 < j AND j <= r + 1 / 2}"
                               kinematic_trk_bands nil)
                        (+ const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (<= const-decl "bool" reals nil)
                        (- const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (IF const-decl "[boolean, T, T -> T]" if_def
                         nil)
                        (nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/"))
                       nil)
                      (kinematic_trk_bands_increasing-1 nil 3632655568
                       ("" (skeep*) (("" (postpone) nil nil)) nil) nil
                       shostak))
                     (any_kinematic_trk_red_TCC1 0
                      (any_kinematic_trk_red_TCC1-1 nil 3639907378
                       ("" (skeep*)
                        (("" (assert)
                          (("" (replaces -4 +)
                            (("" (assert)
                              ((""
                                (typepred "vo")
                                ((""
                                  (rewrite "turnOmega_start")
                                  ((""
                                    (flatten)
                                    ((""
                                      (replaces -1)
                                      (("" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (turnOmega_start formula-decl nil
                         kinematics_turn "kinematics/")
                        (/= const-decl "boolean" notequal nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (boolean nonempty-type-decl nil booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (number nonempty-type-decl nil numbers nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (> const-decl "bool" reals nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (>= const-decl "bool" reals nil)
                        (nnreal type-eq-decl nil real_types nil)
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (any_kinematic_trk_red_TCC2 0
                      (any_kinematic_trk_red_TCC2-1 nil 3639907378
                       ("" (skeep*)
                        (("" (replaces -5)
                          (("" (assert)
                            (("" (rewrite "turnOmega_start")
                              ((""
                                (typepred "vo")
                                ((""
                                  (flatten)
                                  ((""
                                    (replaces -2)
                                    (("" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((turnOmega_start formula-decl nil
                         kinematics_turn "kinematics/")
                        (real nonempty-type-from-decl nil reals nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (boolean nonempty-type-decl nil booleans nil)
                        (/= const-decl "boolean" notequal nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (number nonempty-type-decl nil numbers nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (> const-decl "bool" reals nil)
                        (>= const-decl "bool" reals nil)
                        (nnreal type-eq-decl nil real_types nil)
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (any_kinematic_trk_red_def_TCC1 0
                      (any_kinematic_trk_red_def_TCC1-1 nil 3633968286
                       ("" (skeep*) (("" (assert) nil nil)) nil)
                       ((sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (any_kinematic_trk_red_def_TCC2 0
                      (any_kinematic_trk_red_def_TCC2-1 nil 3633968286
                       ("" (skeep*)
                        (("" (assert)
                          (("" (replace -14) (("" (assert) nil nil))
                            nil))
                          nil))
                        nil)
                       ((nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (any_kinematic_trk_red_def_TCC3 0
                      (any_kinematic_trk_red_def_TCC3-1 nil 3633969007
                       ("" (skeep*)
                        (("" (replace -14) (("" (assert) nil nil))
                          nil))
                        nil)
                       ((real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (any_kinematic_trk_red_def_TCC4 0
                      (any_kinematic_trk_red_def_TCC4-1 nil 3633969007
                       ("" (skeep*)
                        (("" (replace -15) (("" (assert) nil nil))
                          nil))
                        nil)
                       ((real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (any_kinematic_trk_red_def 0
                      (any_kinematic_trk_red_def-1 nil 3633968537
                       ("" (skeep *)
                        (("" (skoletin 1)
                          (("" (skoletin 1)
                            ((""
                              (expand "any_kinematic_trk_red" :assert?
                                      none)
                              ((""
                                (name
                                 "MaxN"
                                 "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                        ELSE ceiling(pi / step)
                                                        ENDIF)")
                                ((""
                                  (replace -1)
                                  ((""
                                    (name
                                     "Lfun"
                                     "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                                    ((""
                                      (replace -1)
                                      ((""
                                        (name
                                         "Rfun"
                                         "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                        ((""
                                          (replace -1)
                                          ((""
                                            (assert)
                                            ((""
                                              (expand
                                               "kinematic_trk_bands_init"
                                               :assert?
                                               none)
                                              ((""
                                                (replace -3)
                                                ((""
                                                  (replace -2)
                                                  ((""
                                                    (replace -1)
                                                    ((""
                                                      (name
                                                       "anglestep"
                                                       "pi / MaxN")
                                                      ((""
                                                        (replace -1)
                                                        ((""
                                                          (assert)
                                                          ((""
                                                            (replace
                                                             -1)
                                                            ((""
                                                              (case
                                                               "NOT MaxN>=1")
                                                              (("1"
                                                                (hide
                                                                 2)
                                                                (("1"
                                                                  (expand
                                                                   "MaxN"
                                                                   1)
                                                                  (("1"
                                                                    (lift-if
                                                                     1)
                                                                    (("1"
                                                                      (hide
                                                                       -6)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "NOT anglestep>0")
                                                                (("1"
                                                                  (expand
                                                                   "anglestep"
                                                                   1)
                                                                  (("1"
                                                                    (cross-mult
                                                                     1)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (name
                                                                     "timestep"
                                                                     "anglestep/omega")
                                                                    (("2"
                                                                      (replace
                                                                       -1)
                                                                      (("2"
                                                                        (name
                                                                         "TrackInt"
                                                                         "kinematic_bands_combine(LOS,
                                                              CD,
                                                              LOS2,
                                                              CD2,
                                                              UseLOS2,
                                                              B,
                                                              T,
                                                              B2,
                                                              T2,
                                                              so,
                                                              vo,
                                                              Lfun,
                                                              Rfun,
                                                              MaxN,
                                                              MaxN,
                                                              timestep,
                                                              timestep,
                                                              AL,
                                                              most_urgent,
                                                              epsH,
                                                              epsV,
                                                              UseHCrit,
                                                              UseVCrit)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "any_red_def")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -10
                                                                                     :dir
                                                                                     rl)
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (split
                                                                                           +)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 (-4
                                                                                                  -5))
                                                                                                (("1"
                                                                                                  (replaces
                                                                                                   -3
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -13
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "add_realband_def")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!1")
                                                                                                                (("1"
                                                                                                                  (skeep)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "j")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "scal_intband_def2")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               -1
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "in?"
                                                                                                                                   (-1
                                                                                                                                    1))
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "scalrb")
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         +)
                                                                                                                                        (("1"
                                                                                                                                          (mult-by
                                                                                                                                           1
                                                                                                                                           "anglestep")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (mult-by
                                                                                                                                           1
                                                                                                                                           "anglestep")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "i")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "j")
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -13
                                                                                                                     +)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "add_realband_def")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "scal_intband_def2"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "in?"
                                                                                                                                 (-1
                                                                                                                                  1))
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "scalrb")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (mult-by
                                                                                                                                       -1
                                                                                                                                       "anglestep")
                                                                                                                                      (("2"
                                                                                                                                        (mult-by
                                                                                                                                         -2
                                                                                                                                         "anglestep")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 (-3
                                                                                                  -5))
                                                                                                (("2"
                                                                                                  (replaces
                                                                                                   -3
                                                                                                   +)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -13
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "add_realband_def")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!1")
                                                                                                                (("1"
                                                                                                                  (skeep)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "j")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "scal_intband_def2")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               -1
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "in?"
                                                                                                                                   (-1
                                                                                                                                    1))
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "scalrb")
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         +)
                                                                                                                                        (("1"
                                                                                                                                          (mult-by
                                                                                                                                           1
                                                                                                                                           "anglestep")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (mult-by
                                                                                                                                           1
                                                                                                                                           "anglestep")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "i")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "j")
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -13
                                                                                                                     +)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "add_realband_def")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "scal_intband_def2"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "in?"
                                                                                                                                 (-1
                                                                                                                                  1))
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "scalrb")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (mult-by
                                                                                                                                       -1
                                                                                                                                       "anglestep")
                                                                                                                                      (("2"
                                                                                                                                        (mult-by
                                                                                                                                         -2
                                                                                                                                         "anglestep")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (flatten)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (hide
                                                                                                 (-1
                                                                                                  -2))
                                                                                                (("3"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("3"
                                                                                                    (hide
                                                                                                     -9)
                                                                                                    (("3"
                                                                                                      (split
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -10
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "add_realband_def")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       +
                                                                                                                       "i!1")
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "j")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "scal_intband_def2")
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     -1
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "in?"
                                                                                                                                         (-1
                                                                                                                                          1))
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "scalrb")
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               +)
                                                                                                                                              (("1"
                                                                                                                                                (mult-by
                                                                                                                                                 1
                                                                                                                                                 "anglestep")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (mult-by
                                                                                                                                                 1
                                                                                                                                                 "anglestep")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i")
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "j")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -10
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "add_realband_def")
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "scal_intband_def2")
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       -1
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "in?"
                                                                                                                                           (-1
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "scalrb")
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 +)
                                                                                                                                                (("1"
                                                                                                                                                  (mult-by
                                                                                                                                                   1
                                                                                                                                                   "anglestep")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (mult-by
                                                                                                                                                   1
                                                                                                                                                   "anglestep")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "i")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (skeep)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "j")
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -10
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "add_realband_def")
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "scal_intband_def2"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "in?"
                                                                                                                                       (-1
                                                                                                                                        1))
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "scalrb")
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (mult-by
                                                                                                                                             -1
                                                                                                                                             "anglestep")
                                                                                                                                            (("1"
                                                                                                                                              (mult-by
                                                                                                                                               -2
                                                                                                                                               "anglestep")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "i")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "j")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -10
                                                                                                                           +)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "add_realband_def")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "scal_intband_def2"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "in?"
                                                                                                                                       (-1
                                                                                                                                        1))
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "scalrb")
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (mult-by
                                                                                                                                             -1
                                                                                                                                             "anglestep")
                                                                                                                                            (("2"
                                                                                                                                              (mult-by
                                                                                                                                               -2
                                                                                                                                               "anglestep")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Lfun"
                                                                                           1)
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (expand
                                                                                         "Rfun"
                                                                                         1)
                                                                                        (("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "timestep"
                                                                                     +)
                                                                                    (("2"
                                                                                      (cross-mult
                                                                                       1)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "timestep"
                                                                               +)
                                                                              (("2"
                                                                                (cross-mult
                                                                                 1)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((pi const-decl "posreal" atan "trig_fnd/")
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (nnreal type-eq-decl nil real_types nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (> const-decl "bool" reals nil)
                        (length def-decl "nat" list_props nil)
                        (nat nonempty-type-eq-decl nil naturalnumbers
                         nil)
                        (< const-decl "bool" reals nil)
                        (int nonempty-type-eq-decl nil integers nil)
                        (integer_pred const-decl
                                      "[rational -> boolean]" integers
                                      nil)
                        (rational nonempty-type-from-decl nil rationals
                                  nil)
                        (rational_pred const-decl "[real -> boolean]"
                                       rationals nil)
                        (AircraftList type-eq-decl nil int_bands nil)
                        (list type-decl nil list_adt nil)
                        (Aircraft type-eq-decl nil int_bands nil)
                        (string type-eq-decl nil strings nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (>= const-decl "bool" reals nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number nonempty-type-decl nil numbers nil)
                        (AND const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (nnreal_plus_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (real_plus_real_is_real application-judgement
                         "real" reals nil)
                        (minus_nzint_is_nzint application-judgement
                         "nzint" integers nil)
                        (minus_odd_is_odd application-judgement
                         "odd_int" integers nil)
                        (nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (TRUE const-decl "bool" booleans nil)
                        (id const-decl "(bijective?[T, T])" identity
                            nil)
                        (bijective? const-decl "bool" functions nil)
                        (RealBand type-eq-decl nil real_bands nil)
                        (IMPLIES const-decl "[bool, bool -> bool]"
                         booleans nil)
                        (= const-decl "[T, T -> boolean]" equalities
                           nil)
                        (/= const-decl "boolean" notequal nil)
                        (nzint nonempty-type-eq-decl nil integers nil)
                        (OR const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (Sign type-eq-decl nil sign "reals/")
                        (kinematic_trk_bands_init const-decl
                          "list[RealBand]" kinematic_trk_bands nil)
                        (detector? const-decl "bool" int_bands nil)
                        (- const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (<= const-decl "bool" reals nil)
                        (+ const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (round const-decl
                               "{j: int | r - 1 / 2 < j AND j <= r + 1 / 2}"
                               kinematic_trk_bands nil)
                        (nznum nonempty-type-eq-decl nil number_fields
                         nil)
                        (/ const-decl "[numfield, nznum -> numfield]"
                           number_fields nil)
                        (any_kinematic_trk_red const-decl "bool"
                          kinematic_trk_bands nil)
                        (integer nonempty-type-from-decl nil integers
                         nil)
                        (ceiling const-decl "{i | x <= i & i < x + 1}"
                                 floor_ceil nil)
                        (nonneg_int nonempty-type-eq-decl nil integers
                         nil)
                        (posnat nonempty-type-eq-decl nil integers nil)
                        (IF const-decl "[boolean, T, T -> T]" if_def
                         nil)
                        (subrange type-eq-decl nil integers nil)
                        (below type-eq-decl nil naturalnumbers nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (in? const-decl "bool" real_bands nil)
                        (below type-eq-decl nil nat_types nil)
                        (nth def-decl "T" list_props nil)
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (* const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (IFF const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (real_times_real_is_real application-judgement
                         "real" reals nil)
                        (nzreal nonempty-type-eq-decl nil reals nil)
                        (MaxN skolem-const-decl "int"
                         kinematic_trk_bands nil)
                        (timestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (both_sides_times_pos_le1_imp formula-decl nil
                         extra_real_props nil)
                        (add_realband_def formula-decl nil real_bands
                         nil)
                        (scalrb const-decl "RealBand" real_bands nil)
                        (both_sides_times_pos_le1 formula-decl nil
                         real_props nil)
                        (real_le_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (scal_intband_def2 formula-decl nil real_bands
                         nil)
                        (listn type-eq-decl nil listn "structures/")
                        (scal const-decl
                              "listn[RealBand](length[IntBand](L))"
                              real_bands nil)
                        (Lfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (Rfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (div_mult_pos_ge1 formula-decl nil real_props
                         nil)
                        (any_red_def formula-decl nil combine_bands
                         nil)
                        (kinematic_bands_combine const-decl
                          "list[IntBand]" combine_bands nil)
                        (Traj type-eq-decl nil int_bands nil)
                        (IntBand type-eq-decl nil int_bands nil)
                        (anglestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (mult_divides2 application-judgement
                         "(divides(m))" divides nil)
                        (mult_divides1 application-judgement
                         "(divides(n))" divides nil)
                        (even_times_int_is_even application-judgement
                         "even_int" integers nil)
                        (div_mult_pos_gt1 formula-decl nil
                         extra_real_props nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (nzreal_div_nzreal_is_nzreal
                         application-judgement "nzreal" real_types nil)
                        (minus_int_is_int application-judgement "int"
                         integers nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       shostak))
                     (all_kinematic_trk_red_def_TCC1 0
                      (all_kinematic_trk_red_def_TCC1-1 nil 3634295003
                       ("" (skeep*) (("" (ground) nil nil)) nil)
                       ((sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (all_kinematic_trk_red_def_TCC2 0
                      (all_kinematic_trk_red_def_TCC2-1 nil 3634295003
                       ("" (skeep*) (("" (assert) nil nil)) nil)
                       ((nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (all_kinematic_trk_red_def_TCC3 0
                      (all_kinematic_trk_red_def_TCC3-1 nil 3634296187
                       ("" (skeep*)
                        (("" (replace -14) (("" (assert) nil nil))
                          nil))
                        nil)
                       ((sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (all_kinematic_trk_red_def_TCC4 0
                      (all_kinematic_trk_red_def_TCC4-1 nil 3634296187
                       ("" (skeep*)
                        (("" (replace -15) (("" (assert) nil nil))
                          nil))
                        nil)
                       ((real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (all_kinematic_trk_red_def_TCC5 0
                      (all_kinematic_trk_red_def_TCC5-1 nil 3642510695
                       ("" (skeep*) (("" (assert) nil nil)) nil)
                       ((int_minus_int_is_int application-judgement
                         "int" integers nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (all_kinematic_trk_red_def 0
                      (all_kinematic_trk_red_def-1 nil 3634295354
                       ("" (skeep*)
                        (("" (skoletin 1)
                          (("" (skoletin 1)
                            ((""
                              (name "MaxN"
                                    "(IF round(pi / step) = pi / step THEN round(pi / step)
                                                       ELSE ceiling(pi / step)
                                                       ENDIF)")
                              ((""
                                (replace -1)
                                ((""
                                  (case "NOT MaxN>0")
                                  (("1"
                                    (expand "MaxN" 1)
                                    (("1"
                                      (lift-if 1)
                                      (("1"
                                        (hide 2)
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (name "anglestep" "pi/MaxN")
                                    (("1"
                                      (case "NOT anglestep > 0")
                                      (("1"
                                        (expand "anglestep" 1)
                                        (("1"
                                          (hide 2)
                                          (("1"
                                            (cross-mult 1)
                                            nil
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (name
                                         "leftred"
                                         "FORALL (i: subrange(-MaxN, 0)):
                                                                                            NOT EXISTS (j: below(length(ktb))):
                                                                                              in?(nth(ktb, j), track(vo)+i * anglestep)")
                                        (("1"
                                          (name
                                           "rightred"
                                           "FORALL (i: subrange(0, MaxN)):
                                                                                                      NOT EXISTS (j: below(length(ktb))): in?(nth(ktb, j), track(vo)+i * anglestep)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (name
                                               "timestep"
                                               "anglestep/omega")
                                              (("1"
                                                (case "NOT timestep>0")
                                                (("1"
                                                  (expand "timestep" 1)
                                                  (("1"
                                                    (cross-mult 1)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (copy -9)
                                                    (("2"
                                                      (expand
                                                       "all_kinematic_trk_red"
                                                       -1
                                                       :assert?
                                                       none)
                                                      (("2"
                                                        (replace -9)
                                                        (("2"
                                                          (name
                                                           "Lfun"
                                                           "LAMBDA (t: nnreal): turnOmega(so, vo, t, -omega)")
                                                          (("2"
                                                            (name
                                                             "Rfun"
                                                             "LAMBDA (t: nnreal): turnOmega(so, vo, t, omega)")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (replace
                                                                   -2)
                                                                  (("2"
                                                                    (replace
                                                                     -9)
                                                                    (("2"
                                                                      (replace
                                                                       -5)
                                                                      (("2"
                                                                        (copy
                                                                         -13)
                                                                        (("2"
                                                                          (expand
                                                                           "kinematic_trk_bands_init"
                                                                           -1
                                                                           :assert?
                                                                           none)
                                                                          (("2"
                                                                            (replace
                                                                             -12)
                                                                            (("2"
                                                                              (replace
                                                                               -2)
                                                                              (("2"
                                                                                (replace
                                                                                 -3)
                                                                                (("2"
                                                                                  (name
                                                                                   "TrackInt"
                                                                                   "kinematic_bands_combine(LOS,
                                                                                              CD,
                                                                                              LOS2,
                                                                                              CD2,
                                                                                              UseLOS2,
                                                                                              B,
                                                                                              T,
                                                                                              B2,
                                                                                              T2,
                                                                                              so,
                                                                                              vo,
                                                                                              Lfun,
                                                                                              Rfun,
                                                                                              MaxN,
                                                                                              MaxN,
                                                                                              timestep,
                                                                                              timestep,
                                                                                              AL,
                                                                                              most_urgent,
                                                                                              epsH,
                                                                                              epsV,
                                                                                              UseHCrit,
                                                                                              UseVCrit)")
                                                                                  (("2"
                                                                                    (name
                                                                                     "UnAdjB"
                                                                                     "scal(anglestep, TrackInt)")
                                                                                    (("2"
                                                                                      (name
                                                                                       "UnModB"
                                                                                       "add(track(vo), UnAdjB)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -13)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -9)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -3)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "all_red_def")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -8
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replaces
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         +)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -8
                                                                                                                               +)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "add"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "map_nth_rw")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "scal"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "addrb"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "scalrb"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (mult-by
                                                                                                                                             -1
                                                                                                                                             "anglestep")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -8
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "add"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "map_nth_rw")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "scal"
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "map_nth_rw")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "addrb"
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "scalrb"
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (mult-by
                                                                                                                                             1
                                                                                                                                             "anglestep")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -3
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -11
                                                                                                                                   +)
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "add(track(vo), scal(anglestep, TrackInt))")
                                                                                                                                    (("1"
                                                                                                                                      (replaces
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "scal(anglestep, TrackInt)")
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "add"
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "map_nth_rw")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "scal"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "map_nth_rw")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "addrb"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "scalrb"
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (mult-by
                                                                                                                                                             -1
                                                                                                                                                             "anglestep")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -10
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "add"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "map_nth_rw")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "scal"
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "map_nth_rw")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "addrb"
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "scalrb")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "map_length")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "map_length")
                                                                                                                                                  (("1"
                                                                                                                                                    (mult-by
                                                                                                                                                     1
                                                                                                                                                     "anglestep")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (rewrite
                                                                                                                                           "map_length"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (rewrite
                                                                                                                                             "map_length"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (rewrite
                                                                                                                                       "map_length"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (flatten)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (hide
                                                                                                                     (-1
                                                                                                                      -2))
                                                                                                                    (("3"
                                                                                                                      (replaces
                                                                                                                       -1
                                                                                                                       +)
                                                                                                                      (("3"
                                                                                                                        (split
                                                                                                                         +)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             +)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -6
                                                                                                                                       +)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "add"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "map_nth_rw")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "scal"
                                                                                                                                             1)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "map_nth_rw")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "addrb"
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "scalrb"
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (mult-by
                                                                                                                                                     -2
                                                                                                                                                     "anglestep")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -2)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "NOT length(ktb) = length(TrackInt)")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (replaces
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -6
                                                                                                                                           +)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "add"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "map_nth_rw")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "scal"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "map_nth_rw")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "addrb"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "scalrb"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (mult-by
                                                                                                                                                         -2
                                                                                                                                                         "anglestep")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             +)
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -6
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "add"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "map_nth_rw")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "scal"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "map_nth_rw")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "addrb"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "scalrb"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (mult-by
                                                                                                                                                     1
                                                                                                                                                     "anglestep")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "NOT length(ktb) = length(TrackInt)")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (replaces
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -6
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "add"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "map_nth_rw")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "scal"
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "map_nth_rw")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "addrb"
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "scalrb"
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (mult-by
                                                                                                                                                         1
                                                                                                                                                         "anglestep")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "Lfun"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "Rfun"
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         (-3
                                                                                          2))
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (skosimp*)
                                              (("2"
                                                (replaces -1)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (skosimp*)
                                            (("2"
                                              (replaces -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((pi const-decl "posreal" atan "trig_fnd/")
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (nnreal type-eq-decl nil real_types nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (> const-decl "bool" reals nil)
                        (length def-decl "nat" list_props nil)
                        (nat nonempty-type-eq-decl nil naturalnumbers
                         nil)
                        (< const-decl "bool" reals nil)
                        (int nonempty-type-eq-decl nil integers nil)
                        (integer_pred const-decl
                                      "[rational -> boolean]" integers
                                      nil)
                        (rational nonempty-type-from-decl nil rationals
                                  nil)
                        (rational_pred const-decl "[real -> boolean]"
                                       rationals nil)
                        (AircraftList type-eq-decl nil int_bands nil)
                        (list type-decl nil list_adt nil)
                        (Aircraft type-eq-decl nil int_bands nil)
                        (string type-eq-decl nil strings nil)
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (>= const-decl "bool" reals nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number nonempty-type-decl nil numbers nil)
                        (AND const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (minus_odd_is_odd application-judgement
                         "odd_int" integers nil)
                        (nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (int_minus_int_is_int application-judgement
                         "int" integers nil)
                        (TRUE const-decl "bool" booleans nil)
                        (id const-decl "(bijective?[T, T])" identity
                            nil)
                        (bijective? const-decl "bool" functions nil)
                        (RealBand type-eq-decl nil real_bands nil)
                        (IMPLIES const-decl "[bool, bool -> bool]"
                         booleans nil)
                        (= const-decl "[T, T -> boolean]" equalities
                           nil)
                        (/= const-decl "boolean" notequal nil)
                        (nzint nonempty-type-eq-decl nil integers nil)
                        (OR const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (Sign type-eq-decl nil sign "reals/")
                        (kinematic_trk_bands_init const-decl
                          "list[RealBand]" kinematic_trk_bands nil)
                        (detector? const-decl "bool" int_bands nil)
                        (- const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (<= const-decl "bool" reals nil)
                        (+ const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (round const-decl
                               "{j: int | r - 1 / 2 < j AND j <= r + 1 / 2}"
                               kinematic_trk_bands nil)
                        (nznum nonempty-type-eq-decl nil number_fields
                         nil)
                        (/ const-decl "[numfield, nznum -> numfield]"
                           number_fields nil)
                        (all_kinematic_trk_red const-decl "bool"
                          kinematic_trk_bands nil)
                        (integer nonempty-type-from-decl nil integers
                         nil)
                        (ceiling const-decl "{i | x <= i & i < x + 1}"
                                 floor_ceil nil)
                        (nonneg_int nonempty-type-eq-decl nil integers
                         nil)
                        (posnat nonempty-type-eq-decl nil integers nil)
                        (IF const-decl "[boolean, T, T -> T]" if_def
                         nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (below type-eq-decl nil nat_types nil)
                        (nth def-decl "T" list_props nil)
                        (nzhVect3 nonempty-type-eq-decl nil track_3D
                         "kinematics/")
                        (* const-decl
                           "[numfield, numfield -> numfield]"
                           number_fields nil)
                        (nnreal_lt_2pi nonempty-type-eq-decl nil atan2
                         "trig_fnd/")
                        (track const-decl "nnreal_lt_2pi" track_3D
                               "kinematics/")
                        (IFF const-decl "[bool, bool -> bool]" booleans
                         nil)
                        (nzreal_div_nzreal_is_nzreal
                         application-judgement "nzreal" real_types nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (real_lt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (MaxN skolem-const-decl "int"
                         kinematic_trk_bands nil)
                        (mult_divides2 application-judgement
                         "(divides(m))" divides nil)
                        (mult_divides1 application-judgement
                         "(divides(n))" divides nil)
                        (even_times_int_is_even application-judgement
                         "even_int" integers nil)
                        (div_mult_pos_gt1 formula-decl nil
                         extra_real_props nil)
                        (anglestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (IntBand type-eq-decl nil int_bands nil)
                        (Traj type-eq-decl nil int_bands nil)
                        (kinematic_bands_combine const-decl
                          "list[IntBand]" combine_bands nil)
                        (add const-decl
                             "listn[RealBand](length[RealBand](RL))"
                             real_bands nil)
                        (real_le_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (both_sides_times_pos_le1_imp formula-decl nil
                         extra_real_props nil)
                        (addrb const-decl "RealBand" real_bands nil)
                        (map_nth_rw formula-decl nil more_map_props
                         nil)
                        (scalrb const-decl "RealBand" real_bands nil)
                        (both_sides_times_pos_gt1 formula-decl nil
                         real_props nil)
                        (both_sides_times_pos_lt1 formula-decl nil
                         real_props nil)
                        (both_sides_times_pos_ge1_imp formula-decl nil
                         extra_real_props nil)
                        (map_length formula-decl nil more_map_props
                         nil)
                        (map adt-def-decl "list[T1]" list_adt_map nil)
                        (Lfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (Rfun skolem-const-decl
                         "[nnreal -> [Vect3, Vect3]]"
                         kinematic_trk_bands nil)
                        (all_red_def formula-decl nil combine_bands
                         nil)
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (scal const-decl
                              "listn[RealBand](length[IntBand](L))"
                              real_bands nil)
                        (listn type-eq-decl nil listn "structures/")
                        (timestep skolem-const-decl "nzreal"
                         kinematic_trk_bands nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (real_times_real_is_real application-judgement
                         "real" reals nil)
                        (in? const-decl "bool" real_bands nil)
                        (below type-eq-decl nil naturalnumbers nil)
                        (subrange type-eq-decl nil integers nil)
                        (real_plus_real_is_real application-judgement
                         "real" reals nil)
                        (minus_int_is_int application-judgement "int"
                         integers nil)
                        (nzreal nonempty-type-eq-decl nil reals nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       shostak))
                     (kinematic_trk_first_green_TCC1 0
                      (kinematic_trk_first_green_TCC1-1 nil 3661191815
                       ("" (skeep*) (("" (ground) nil nil)) nil)
                       ((real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (real_ge_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_first_green_TCC2 0
                      (kinematic_trk_first_green_TCC2-1 nil 3661191815
                       ("" (skeep*) (("" (assert) nil nil)) nil)
                       ((nonneg_ceiling_is_nat application-judgement
                         "nat" floor_ceil nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_first_green_TCC3 0
                      (kinematic_trk_first_green_TCC3-1 nil 3661191815
                       ("" (skeep*)
                        (("" (assert)
                          (("" (replaces -4 +)
                            (("" (assert)
                              ((""
                                (typepred "vo")
                                ((""
                                  (rewrite "turnOmega_start")
                                  ((""
                                    (flatten)
                                    ((""
                                      (replaces -1)
                                      (("" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (turnOmega_start formula-decl nil
                         kinematics_turn "kinematics/")
                        (/= const-decl "boolean" notequal nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (numfield nonempty-type-eq-decl nil
                         number_fields nil)
                        (- const-decl "[numfield -> numfield]"
                           number_fields nil)
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (boolean nonempty-type-decl nil booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (number nonempty-type-decl nil numbers nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (> const-decl "bool" reals nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (>= const-decl "bool" reals nil)
                        (nnreal type-eq-decl nil real_types nil)
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_first_green_TCC4 0
                      (kinematic_trk_first_green_TCC4-1 nil 3661191815
                       ("" (skeep*)
                        (("" (assert)
                          (("" (replaces -5 +)
                            (("" (assert)
                              ((""
                                (typepred "vo")
                                ((""
                                  (rewrite "turnOmega_start")
                                  ((""
                                    (flatten)
                                    ((""
                                      (replaces -1)
                                      (("" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((turnOmega_start formula-decl nil
                         kinematics_turn "kinematics/")
                        (/= const-decl "boolean" notequal nil)
                        (zero const-decl "Vector" vectors_2D
                              "vectors/")
                        (nonneg_real nonempty-type-eq-decl nil
                         real_types nil)
                        (posreal nonempty-type-eq-decl nil real_types
                         nil)
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (sqv_zero formula-decl nil vectors_2D
                         "vectors/")
                        (boolean nonempty-type-decl nil booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (number nonempty-type-decl nil numbers nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (> const-decl "bool" reals nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (>= const-decl "bool" reals nil)
                        (nnreal type-eq-decl nil real_types nil)
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil))
                     (kinematic_trk_first_green_TCC5 0
                      (kinematic_trk_first_green_TCC5-1 nil 3661191815
                       ("" (subtype-tcc) nil nil)
                       ((Integral const-decl "real" integral_def
                         "analysis/")
                        (atan_value const-decl "real" atan "trig_fnd/")
                        (pi const-decl "posreal" atan "trig_fnd/")
                        (round const-decl
                               "{j: int | r - 1 / 2 < j AND j <= r + 1 / 2}"
                               kinematic_trk_bands nil)
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (* const-decl "real" vectors_2D "vectors/")
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (norm const-decl "nnreal" vectors_2D
                              "vectors/")
                        (ground_speed const-decl "nnreal" track_3D
                                      "kinematics/")
                        (cos const-decl "real" sincos_def "trig_fnd/")
                        (sin const-decl "real" sincos_def "trig_fnd/")
                        (turnOmega const-decl "[Vect3, Vect3]"
                                   kinematics_turn "kinematics/")
                        (nnreal_div_posreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (nnreal_plus_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (nnreal_times_nnreal_is_nnreal
                         application-judgement "nnreal" real_types nil)
                        (real_plus_real_is_real application-judgement
                         "real" reals nil)
                        (minus_nzreal_is_nzreal application-judgement
                         "nzreal" real_types nil)
                        (real_minus_real_is_real application-judgement
                         "real" reals nil)
                        (posreal_times_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil)
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (real_div_nzreal_is_real application-judgement
                         "real" reals nil)
                        (real_times_real_is_real application-judgement
                         "real" reals nil))
                       nil))
                     (kinematic_trk_first_green_TCC6 0
                      (kinematic_trk_first_green_TCC6-1 nil 3661191815
                       ("" (skeep)
                        (("" (skeep)
                          (("" (skeep)
                            (("" (skeep)
                              ((""
                                (skeep)
                                ((""
                                  (skeep)
                                  ((""
                                    (typepred "vo")
                                    ((""
                                      (lemma "vectors_2D.sqv_eq_0")
                                      ((""
                                        (inst?)
                                        (("" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ((sqv_eq_0 formula-decl nil vectors_2D
                         "vectors/")
                        (real_le_is_total_order name-judgement
                         "(total_order?[real])" real_props nil)
                        (sqv_cont name-judgement "continuous_vr_fun"
                         vect_cont_2D "vect_analysis/")
                        (real_gt_is_strict_total_order name-judgement
                         "(strict_total_order?[real])" real_props nil)
                        (boolean nonempty-type-decl nil booleans nil)
                        (bool nonempty-type-eq-decl nil booleans nil)
                        (NOT const-decl "[bool -> bool]" booleans nil)
                        (number nonempty-type-decl nil numbers nil)
                        (number_field_pred const-decl
                         "[number -> boolean]" number_fields nil)
                        (number_field nonempty-type-from-decl nil
                         number_fields nil)
                        (real_pred const-decl
                                   "[number_field -> boolean]" reals
                                   nil)
                        (real nonempty-type-from-decl nil reals nil)
                        (> const-decl "bool" reals nil)
                        (Vector type-eq-decl nil vectors_2D "vectors/")
                        (>= const-decl "bool" reals nil)
                        (nnreal type-eq-decl nil real_types nil)
                        (sqv const-decl "nnreal" vectors_2D "vectors/")
                        (Vect3 type-eq-decl nil vectors_3D_def
                               "vectors/")
                        (Vect2 type-eq-decl nil vectors_2D_def
                               "vectors/")
                        (vect2 const-decl "Vect2" vect_3D_2D
                               "vectors/")
                        (pi_bound name-judgement
                         "{r: posreal | pi_lb < r AND r < pi_ub}"
                         atan_approx "trig_fnd/")
                        (posreal_div_posreal_is_posreal
                         application-judgement "posreal" real_types
                         nil))
                       nil)))

