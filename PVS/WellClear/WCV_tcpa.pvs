WCV_tcpa[TCPA,TCOA:nnreal,DTHR,ZTHR:posreal]  : THEORY 

% TCPA is the time to closest point of approach threshold
% TCOA is the time to co-altitude threshold
% DTHR is the distance threshold
% ZTHR is the altitude threshold

BEGIN

  IMPORTING horizontal_WCV_tcpa[TCPA,DTHR],
  	    WCV[TCPA,TCOA,DTHR,ZTHR],
	    vectors@vectors_3D,
  	    ACCoRD@cd3d

  s,v : VAR Vect3  
  B   : VAR nnreal
  T   : VAR posreal

  WCV_tcpa(s,v): MACRO bool =
     WCV(tcpa)(s,v)

  WCV_tcpa_symmetric : THEOREM
    WCV_symmetric?(tcpa)

  WCV_tcpa_local_convexity: THEOREM
    WCV_locally_convex?(tcpa)

  WCV_tcpa_interval(B,(T|B<T),s,v): MACRO EntryExit[B,T] = 
    WCV_interval(tcpa,horizontal_WCV_tcpa_interval)(B,T,s,v)

  WCV_tcpa_interval_correct: LEMMA B<T IMPLIES
    FORALL (t:Lookahead[B,T]):
      LET interval = WCV_tcpa_interval(B,T,s,v),
          tentry = interval`entry,
	  texit  = interval`exit IN
      WCV_tcpa(s+t*v,v) IFF (tentry<=t AND t<=texit)

  WCV_tcpa_detection(B,T,s,v): MACRO bool =
    WCV_detection(tcpa,horizontal_WCV_tcpa_interval)(B,T,s,v)

  WCV_tcpa_detection_correct: LEMMA B<T IMPLIES
    (WCV_tcpa_detection(B,T,s,v) IFF
    (EXISTS (t:Lookahead[B,T]): WCV_tcpa(s+t*v,v)))

END WCV_tcpa
