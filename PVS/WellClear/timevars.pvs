timevars : THEORY
BEGIN

  IMPORTING vectors@vectors_2D,
            ACCoRD@definitions

  % Horizontal time variables

  timevar?(f:[[Vect2,Vect2]->real]) : bool = 
    FORALL (s,v:Vect2) :  
      s*v > 0 IMPLIES f(s,v) < 0

  TimeVar : TYPE = (timevar?)

  symmetric?(tvar:TimeVar) : bool =
    FORALL (s,v:Vect2): tvar(s,v) = tvar(-s,-v)

  tcpa(s,v:Vect2) : real =
    IF v /= zero THEN horizontal_tca(s,v) 
    ELSE 0 
    ENDIF

  tcpa_timevar : JUDGEMENT
    tcpa HAS_TYPE TimeVar

  tcpa_symm : LEMMA
    symmetric?(tcpa)

  max_tvar(tvar:TimeVar)(s,v:Vect2) : real =
    max(tvar(s,v),tvar(-s,-v))

  max_tvar_timevar : JUDGEMENT
    max_tvar(tvar:TimeVar) HAS_TYPE TimeVar

  max_tvar_symm : LEMMA
    FORALL(tvar:TimeVar):
      symmetric?(max_tvar(tvar))

  min_tvar(tvar:TimeVar)(s,v:Vect2) : real =
    min(tvar(s,v),tvar(-s,-v))

  min_tvar_timevar : JUDGEMENT
    min_tvar(tvar:TimeVar) HAS_TYPE TimeVar

  min_tvar_symm : LEMMA
    FORALL(tvar:TimeVar):
      symmetric?(min_tvar(tvar))

  % Tau: range/range rate

  tau(s:Vect2,(v:Vect2|(s*v /= 0))) : real = -sqv(s)/(s*v)

  tau_tca: LEMMA FORALL (s,v:Vect2): s*v<0 IMPLIES
    tau(s,v) >= horizontal_tca(s,v)

  % Vertical time variables

  sz,vz   : VAR real

  % Time to co-altitude
  tcoa(sz,vz): real = 
    IF sz*vz < 0 THEN -(sz/vz) ELSE -1 ENDIF

END timevars
