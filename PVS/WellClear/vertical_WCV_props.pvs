vertical_WCV_props: THEORY
BEGIN

  IMPORTING vertical_WCV

  sz,vz   : VAR real
  nzvz    : VAR nzreal
  B	  : VAR nnreal
  T	  : VAR posreal
  ZTHR    : VAR posreal
  tcoa1,
  tcoa2   : VAR nnreal

  vertical_entry_tcoa_ge_0 : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,vz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,vz),
	delta = interval_tcoa1`entry-interval_tcoa2`entry IN
      	nonempty?(interval_tcoa1) IMPLIES
          nonempty?(interval_tcoa2) AND 0 <= delta 

  vertical_entry_tcoa_singleton : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,vz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,vz) IN
        nonempty?(interval_tcoa1) AND
      	singleton?(interval_tcoa2) IMPLIES
        interval_tcoa1`entry = interval_tcoa2`entry AND
        interval_tcoa1`exit = interval_tcoa2`exit 

  Theta_H_ge2 : LEMMA
    FORALL (zthr1,zthr2:posreal):
      zthr1 <= zthr2 IMPLIES
      Theta_H[zthr1](sz,nzvz,Entry) >= Theta_H[zthr2](sz,nzvz,Entry)

  vertical_entry_tcoa_vz_eq_0 : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,vz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,vz),
	delta = interval_tcoa1`entry-interval_tcoa2`entry IN
      nonempty?(interval_tcoa1) AND
      vz = 0 IMPLIES
        delta = 0

  vertical_entry_tcoa_leq_a : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,nzvz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,nzvz),
	delta = interval_tcoa1`entry-interval_tcoa2`entry,
        theta1 = Theta_H[max(ZTHR, abs(nzvz)*tcoa1)](sz, nzvz,Entry) IN
      nonempty?(interval_tcoa1) AND
      theta1 <= B IMPLIES
        delta = 0

  vertical_entry_tcoa_leq_b : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,nzvz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,nzvz),
	delta = interval_tcoa1`entry-interval_tcoa2`entry,
        theta1 = Theta_H[max(ZTHR, abs(nzvz)*tcoa1)](sz, nzvz,Entry),
        theta2 = Theta_H[max(ZTHR, abs(nzvz)*tcoa2)](sz, nzvz,Entry) IN
      nonempty?(interval_tcoa1) AND
      theta2 > B IMPLIES
        delta = theta1-theta2

  vertical_entry_tcoa_leq_c : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,nzvz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,nzvz),
	delta = interval_tcoa1`entry-interval_tcoa2`entry,
        theta1 = Theta_H[max(ZTHR, abs(nzvz)*tcoa1)](sz, nzvz,Entry),
        theta2 = Theta_H[max(ZTHR, abs(nzvz)*tcoa2)](sz, nzvz,Entry) IN
      nonempty?(interval_tcoa1) AND
      theta2 <= B AND B < theta1 IMPLIES
        delta = theta1 - B

  Theta_H_sub2 : LEMMA
    FORALL (zthr1,zthr2:posreal):
      Theta_H[zthr1](sz,nzvz,Entry) - Theta_H[zthr2](sz,nzvz,Entry) = (zthr2-zthr1)/abs(nzvz)

  vertical_entry_tcoa_leq : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,vz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,vz),
	delta = interval_tcoa1`entry-interval_tcoa2`entry IN
      nonempty?(interval_tcoa1) IMPLIES
        0 <= delta  AND
        delta <= IF vz = 0 THEN 0 ELSE 
                   (max(ZTHR, abs(vz)*tcoa2) - max(ZTHR, abs(vz)*tcoa1))/abs(vz) 
                 ENDIF

  vertical_exit_tcoa_eq_0 : LEMMA B < T AND tcoa1 <= tcoa2 IMPLIES
    LET interval_tcoa1 = vertical_WCV_interval[tcoa1,ZTHR](B,T,sz,vz),
      	interval_tcoa2 = vertical_WCV_interval[tcoa2,ZTHR](B,T,sz,vz),
	delta = interval_tcoa1`exit-interval_tcoa2`exit IN
      nonempty?(interval_tcoa1) IMPLIES
        delta = 0

END vertical_WCV_props
